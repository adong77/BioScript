{"version":3,"sources":["components/load/TabixIndexedFile.worker.js","contexts/SourceContext.js","contexts/SettingsContext.js","components/SourceRoute.js","components/Navigation.js","components/Settings.js","components/load/TabixIndexedFileWorker.js","components/load/LoadVcfFile.js","contexts/context-helpers.js","components/util/links.js","components/query/VariantTable.js","components/query/VariantDetail.js","components/query/VariantQuery.js","components/AnalysisSelector.js","components/analyses/SettingsAlert.js","components/analyses/ReferenceAlert.js","components/util/query.js","components/analyses/SingleVariantTrait.js","components/util/style.js","components/traits/EarwaxTrait.js","components/traits/AsparagusTrait.js","components/traits/BitterTastingTrait.js","components/traits/MuscleTrait.js","components/traits/EyeColorTrait_Brown.js","components/traits/EyeColorTrait_Green.js","components/traits/Traits.js","components/pgx/SimvastatinDrug.js","components/util/alleles.js","components/pgx/WarfarinDrug.js","components/pgx/PGx.js","components/analyses/LRRiskModel.js","components/risks/Type2DiabetesRisk.js","components/analyses/MultiVariantTrait.js","components/risks/AlzheimersRisk.js","components/risks/Risks.js","components/ancestry/AncestryPCABackgrounds.js","components/ancestry/AncestryPCA.js","components/ancestry/Ancestry.js","components/help/Help.js","MySeq.js","index.js"],"names":["module","exports","Worker","__webpack_public_path__","SourceContext","React","createContext","defaultSettings","sample","undefined","assumeRefRef","external","SettingsContext","settings","PropTypes","shape","string","bool","SourceRoute","Component","component","rest","Consumer","source","render","props","to","pathname","state","from","location","Icon","styled","i","Navigation","isOpen","handleMenuToggle","bind","handleSampleChange","this","setState","evt","updateSettings","target","value","samples","Navbar","color","light","expand","className","NavbarBrand","tag","Link","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","length","Form","inline","FormGroup","Label","for","Input","id","type","bsSize","onChange","map","key","Settings","check","checked","FormText","TabixIndexedFileWorker","worker","PromiseWorker","postMessage","kind","ctg","pos","end","data","catch","err","message","startsWith","createTabixFileWorker","variant","index","TabixWorker","createTabixFileFromURL","variantURL","indexURL","InlineIcon","VCFLink","href","url","preventDefault","setURL","tbi","reference","children","defaultProps","LoadVcfFile","redirectToReferrer","fileError","fileHelpMessage","urlError","urlHelpMessage","handleFiles","updateURL","handleURL","updateAndHandleURL","search","query","parse","vcf","trim","indexedFile","vcfSource","VCFSource","setSource","fileList","files","Error","Array","variantFile","indexFile","name","endsWith","createTabixFileFromFile","setSourceFromURL","UncontrolledAlert","row","Col","xs","multiple","invalid","FormFeedback","onSubmit","lg","Row","Button","Ref","b37Reference","hg38Reference","withSourceAndSettings","attrs","PubMed","pubmedId","isArrayLikeObject","rel","anPubmed","DbSnp","rsId","isString","anRsId","ClinVar","variantId","searchTerm","contig","position","encodeURIComponent","Omim","mimNumber","replace","join","SNPedia","title","stringify","PharmGKB","PAid","PAidGuide","ExternalLink","GnomAD","ref","alt","GenomeBrowser","hg19Reference","normalizeContig","region","Math","max","oldid","StyledTable","Table","VariantTable","bordered","size","variants","toString","selectVariant","selectedVariant","genotype","withSettings","DefList","dl","dt","Value","dd","MoreLink","button","GlobalAF","gnomadExome","gnomadGenome","isEmpty","ac","get","an","toLocaleString","maximumFractionDigits","SnpEffEffectTable","snpeff","ann","isArray","moreHandler","slice","maxDisplay","anAnn","effect","featureId","feature_id","geneId","gene_id","hgvsC","hgvs_c","hgvsP","hgvs_p","PopulationTab","combined","pops","afr","amr","asj","eas","fin","nfe","oth","Object","keys","forEach","af","assign","sort","a","b","totalAC","totalAN","totalAF","md","ClinVarTab","rcv","clinvar","omim","entry","accession","conditions","clinical_significance","review_status","medgen","FunctionalTab","propTypes","object","Number","MAX_SAFE_INTEGER","detail","activeTab","helpMessage","switchTab","updateVariantDetail","prevProps","then","shortName","chrom","fetch","mode","response","ok","json","results","total","hits","tab","label","klasses","classNames","active","close","aria-label","aria-hidden","tabs","renderTab","disabled","TabContent","TabPane","tabId","filter","QueryExample","QueryWrapper","div","QueryTable","QueryFixed","CoordinateSearchBoxImpl","handleSearchChange","handleQueries","handleQuery","createSearch","dbsnp","hg19","start","dbnsfp","hg38","Promise","reject","includes","resolve","genomic_pos_hg19","chr","genomic_pos","all","split","identity","coordinateQuery","sm","hidden","error","placeholder","CoordinateSearchBox","VariantQuery","handleCoordinateQuery","handleSelectVariant","handleCloseDetail","regions","normalizeRegions","normRegions","flatten","VariantDetail","AnalysisSelector","dropdownOpen","toggleDropdown","activeAnalysis","analyses","find","analysis","route","category","categoryPath","Dropdown","toggle","dropdownText","path","exact","SettingsAlert","Alert","ReferenceAlert","refAwareVariantQuery","pos_hg38","isRequired","number","showSettingsAlert","showReferenceAlert","trait","association","assoc","phenotype","MonoSpan","span","earwax","asparagus","bitter","muscle","eyecolor","traits","Traits","Fragment","simvastatin","flip","A","c","C","g","G","t","T","flipStrand","flipped","allele","warfarinFDA","starName","vkorcGenotype","cyp2c9Genotype","warfarinAlg","WarfarinFDA","genotypes","queries","idx","every","missingGenotype","referenceError","concat","isEqual","WarfarinAlg","drugs","handleMissingGenotype","handleReferenceError","PGx","drug","HundredPersonFigure","maxColorIdx","count","width","height","transform","d","range","floor","col","xlinkHref","x","y","style","fill","RiskCard","round","risk","Card","CardHeader","CardBody","CardText","modifier","disease","preTestRisk","cumulativeLR","riskVariants","riskVariant","LR","postTestOdds","postTestRisk","t2d","alzheimer","risks","Risks","continentalView","europeanView","southAsianView","Legend","backgroundMap","continental","european","southasian","ancestries","alleleCount","isLoading","backgroundPops","handleBackgroundChange","queryVariants","countMatches","match","RegExp","counted","PC1","PC2","avg","denom","coeff1","coeff2","normAC","computePCACoordinates","myData","backgroundView","verticalAlign","Spinner","country","stroke","strokeWidth","fillOpacity","strokeOpacity","colSpan","Ancestry","ancestry","About","Data","Acknowledgements","TermsAndConditions","NavLinkSidebar","Help","vertical","MySeq","Provider","basename","process","Container","fluid","rp","ReactDOM","document","getElementById"],"mappings":"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AQL,CACED,EAAG,UACHC,GAAI,UAEN,CACED,EAAG,UACHC,GAAI,UAEN,CACED,EAAG,UACHC,GAAI,UAEN,CACED,EAAG,UACHC,GAAI,UAEN,CACED,EAAG,UACHC,GAAI,UAEN,CACED,EAAG,UACHC,EAAG,SAEL,CACED,EAAG,SACHC,EAAG,UAEL,CACED,EAAG,SACHC,EAAG,WAqqCHE,KAAM,UAER,CACEhY,UAAW,WACX4C,KApuCuB,CACzB,CAAEiV,EAAG,SAAUC,EAAG,UAIlB,CAAED,GAAI,SAAUC,EAAG,UACnB,CAAED,GAAI,QAASC,EAAG,SAClB,CAAED,GAAI,SAAUC,EAAG,SACnB,CAAED,GAAI,SAAUC,GAAI,UACpB,CAAED,GAAI,QAASC,GAAI,UACnB,CAAED,GAAI,SAAUC,GAAI,UACpB,CAAED,GAAI,QAAUC,GAAI,UAIpB,CAAED,EAAG,QAASC,GAAI,WAstChBE,KAAM,WAIGsB,GAAe,CA0B1B,CACEtZ,UAAW,qBACX4C,KAt/BW,CACb,CACEiV,GAAI,SACJC,EAAG,UAEL,CACED,GAAI,SACJC,EAAG,SAEL,CACED,GAAI,SACJC,GAAI,UAEN,CACED,EAAG,QACHC,EAAG,UAw+BHE,KAAM,UAOR,CACEhY,UAAW,UACX4C,KA58BY,CACd,CACEiV,GAAI,SACJC,EAAG,UAEL,CACED,GAAI,SACJC,GAAI,QAEN,CACED,GAAI,QACJC,EAAG,SAEL,CACED,GAAI,QACJC,EAAG,UA87BHE,KAAM,UAiBR,CACEhY,UAAW,UACX4C,KA54BY,CACd,CACEiV,GAAI,SACJC,EAAG,UAEL,CACED,GAAI,QACJC,GAAI,UAEN,CACED,GAAI,SACJC,GAAI,UAEN,CACED,GAAI,SACJC,GAAI,UAEN,CACED,EAAG,QACHC,GAAI,UAEN,CACED,EAAG,QACHC,EAAG,SAEL,CACED,GAAI,SACJC,EAAG,WAk3BHE,KAAM,UAER,CACEhY,UAAW,SACX4C,KAn3BW,CACb,CACEiV,EAAG,SACHC,EAAG,UAEL,CACED,GAAI,SACJC,EAAG,UAEL,CACED,GAAI,QACJC,EAAG,SAEL,CACED,EAAG,QACHC,EAAG,UAq2BHE,KAAM,UAqCR,CACEhY,UAAW,WACX4C,KA/tBa,CACf,CACEiV,GAAI,SACJC,GAAI,UAEN,CACED,GAAI,QACJC,GAAI,UAEN,CACED,EAAG,QACHC,GAAI,UAEN,CACED,EAAG,SACHC,GAAI,SAEN,CACED,EAAG,SACHC,GAAI,SAEN,CACED,GAAI,SACJC,EAAG,SAEL,CACED,GAAI,SACJC,GAAI,UAqsBJE,KAAM,UAYR,CACEhY,UAAW,WACX4C,KAhqBa,CACf,CACEiV,GAAI,SACJC,GAAI,UAEN,CACED,GAAI,SACJC,GAAI,UAEN,CACED,GAAI,SACJC,GAAI,QAEN,CACED,GAAI,SACJC,GAAI,SAEN,CACED,GAAI,OACJC,GAAI,UA8oBJE,KAAM,UAqCR,CACEhY,UAAW,SACX4C,KApdW,CACb,CACEiV,GAAI,QACJC,EAAG,UAEL,CACED,EAAG,SACHC,EAAG,UAEL,CACED,EAAG,SACHC,EAAG,UAEL,CACED,EAAG,SACHC,EAAG,UAEL,CACED,GAAI,QACJC,EAAG,WAkcHE,KAAM,WAcGuB,GAAiB,CAC5B,CACEvZ,UAAW,OACX4C,KAnOS,CACX,CACEiV,GAAI,SACJC,GAAI,UAEN,CACED,EAAG,SACHC,EAAG,SAEL,CACED,EAAG,SACHC,EAAG,SAEL,CACED,EAAG,QACHC,EAAG,UAEL,CACED,GAAI,QACJC,EAAG,WAiNHE,KAAM,UAER,CACEhY,UAAW,UACX4C,KArQY,CACd,CACEiV,GAAI,SACJC,EAAG,UAEL,CACED,EAAG,QACHC,EAAG,UAEL,CACED,EAAG,SACHC,EAAG,QAEL,CACED,EAAG,SACHC,EAAG,UAKL,CACED,EAAG,QACHC,EAAG,UAEL,CACED,GAAI,SACJC,EAAG,WA4OHE,KAAM,UAER,CACEhY,UAAW,WACX4C,KA5Wa,CAIf,CACEiV,EAAG,SACHC,EAAG,UAEL,CACED,EAAG,SACHC,EAAG,UAEL,CACED,EAAG,SACHC,EAAG,WA+VHE,KAAM,UAOR,CACEhY,UAAW,eACX4C,KAxUgB,CAClB,CACEiV,EAAG,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","file":"static/js/main.dbe5b167.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"c92a980eebdd0543f43b.worker.js\");\n};","import React from 'react';\n\nconst SourceContext = React.createContext(null);\n\nexport default SourceContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const defaultSettings = {\n  sample: undefined,\n  assumeRefRef: false,\n  external: true\n};\n\nconst SettingsContext = React.createContext({\n  settings: defaultSettings\n});\n\nexport const settingsPropType = PropTypes.shape({\n  sample: PropTypes.string,\n  assumeRefRef: PropTypes.bool,\n  external: PropTypes.bool\n});\n\nexport function withSettings(Component) {\n  return function SettingsComponent(props) {\n    return (\n      <SettingsContext.Consumer>\n        {settings => <Component settings={settings} {...props} />}\n      </SettingsContext.Consumer>\n    );\n  };\n}\n\nexport default SettingsContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport SourceContext from '../contexts/SourceContext';\n\nconst SourceRoute = ({ component: Component, ...rest }) => (\n  <SourceContext.Consumer>\n    {source => (\n      <Route\n        {...rest}\n        render={props => {\n          return source ? (\n            <Component source={source} {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: '/load',\n                state: { from: props.location }\n              }}\n            />\n          );\n        }}\n      />\n    )}\n  </SourceContext.Consumer>\n);\n\nSourceRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  location: PropTypes.object // eslint-disable-line\n};\n\nexport default SourceRoute;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from 'reactstrap';\n\nconst Icon = styled.i`\n  font-size: 24px;\n`;\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false\n    };\n\n    this.handleMenuToggle = this.handleMenuToggle.bind(this);\n    this.handleSampleChange = this.handleSampleChange.bind(this);\n  }\n\n  handleMenuToggle() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  handleSampleChange(evt) {\n    this.props.updateSettings({ sample: evt.target.value });\n  }\n\n  render() {\n    const { samples, settings } = this.props;\n    const { isOpen } = this.state;\n\n    return (\n      <Navbar color=\"light\" light expand=\"sm\" className=\"mb-3\">\n        <NavbarBrand tag={Link} to=\"/\">\n          MySeq\n        </NavbarBrand>\n        <NavbarToggler onClick={this.handleMenuToggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} to=\"/load\">\n                New VCF\n              </NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Analyses\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem tag={Link} to=\"/query\">\n                  Query Variants\n                </DropdownItem>\n                <DropdownItem tag={Link} to=\"/traits\">\n                  Physical Traits\n                </DropdownItem>\n                <DropdownItem tag={Link} to=\"/pgx\">\n                  Pharmacogenomics\n                </DropdownItem>\n                <DropdownItem tag={Link} to=\"/risks\">\n                  Disease Risk\n                </DropdownItem>\n                <DropdownItem tag={Link} to=\"/ancestry\">\n                  Ancestry\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {samples.length > 0 && (\n            <Form inline className=\"mr-sm-2\">\n              <FormGroup>\n                <Label for=\"sample\" className=\"mr-sm-2\">\n                  Sample\n                </Label>\n                <Input\n                  id=\"sample\"\n                  type=\"select\"\n                  bsSize=\"sm\"\n                  value={settings.sample || samples[0]}\n                  onChange={this.handleSampleChange}\n                >\n                  {samples.map(sample => (\n                    <option key={sample} value={sample}>\n                      {sample}\n                    </option>\n                  ))}\n                </Input>\n              </FormGroup>\n            </Form>\n          )}\n          <Nav navbar>\n            <NavItem>\n              <NavLink tag={Link} to=\"/help\">\n                <Icon className=\"material-icons\">help</Icon>\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/settings\">\n                <Icon className=\"material-icons\">settings</Icon>\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nNavigation.propTypes = {\n  samples: PropTypes.arrayOf(PropTypes.string).isRequired,\n  settings: PropTypes.shape({\n    sample: PropTypes.string\n  }).isRequired,\n  updateSettings: PropTypes.func.isRequired\n};\n\nexport default Navigation;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, Input, Label, FormText } from 'reactstrap';\nimport { settingsPropType } from '../contexts/SettingsContext';\n\nfunction Settings(props) {\n  const { settings, updateSettings } = props;\n  return (\n    <div>\n      <h3>Settings</h3>\n      <Form>\n        <FormGroup check className=\"pb-3\">\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={settings.assumeRefRef}\n              onChange={() =>\n                updateSettings({ assumeRefRef: !settings.assumeRefRef })\n              }\n            />{' '}\n            Assume missing variants have reference genotype\n          </Label>\n          <FormText color=\"muted\">\n            Select when analyzing whole genome sequencing (WGS) data. Most WGS\n            analysis pipelines only report sites different from the reference\n            genome. When this option is selected, MySeq will assume that\n            unreported sites have homozygous reference genotypes.\n          </FormText>\n        </FormGroup>\n\n        <FormGroup check className=\"pb-3\">\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={settings.external}\n              onChange={() => updateSettings({ external: !settings.external })}\n            />{' '}\n            Allow queries to external services\n          </Label>\n          <FormText color=\"muted\">\n            MySeq can query external services to obtain more information about\n            variants, genes and other identifiers. MySeq <b>never</b> sends the\n            genotype to an external service (that is how many copies of a\n            variant), only the variant description (that is the\n            &ldquo;edit&rdquo; to the reference genome). However, a combination\n            of rare variants, even without genoytpes, may still be identifiable.\n          </FormText>\n        </FormGroup>\n      </Form>\n    </div>\n  );\n}\n\nSettings.propTypes = {\n  settings: settingsPropType.isRequired,\n  updateSettings: PropTypes.func.isRequired\n};\n\nexport default Settings;\n","import PromiseWorker from 'promise-worker';\nimport TabixWorker from './TabixIndexedFile.worker';\n\n/**\n * Proxy class for creating TabixIndexedFile in web worker\n *\n * Offloads compute intensive parsing and query operations from main thread\n */\nclass TabixIndexedFileWorker {\n  constructor(worker) {\n    this.worker = new PromiseWorker(worker);\n  }\n\n  /**\n   * Return header from Tabix Indexed File\n   * @return {Array<string>} Array of header lines\n   */\n  header() {\n    return this.worker.postMessage({ kind: 'header' });\n  }\n\n  /**\n   * Return records in genomic ranges\n   * @param  {string} ctg Conting\n   * @param  {number} pos Inclusive start coordinate (1-indexed)\n   * @param  {number} end Inclusive end coordinate (1-indexed)\n   * @return {Array<string>} Array of record lines\n   */\n  records(ctg, pos, end) {\n    return this.worker\n      .postMessage({\n        kind: 'records',\n        data: { ctg, pos, end }\n      })\n      .catch(err => {\n        if (err.message.startsWith('Unknown contig')) {\n          // Since Error can't be cloned we lose the custom error classes, specifically\n          // ContigNotInIndexError. Match on message to convert to empty array.\n          return [];\n        }\n        throw err;\n      });\n  }\n}\n\nfunction createTabixFileWorker(kind, variant, index) {\n  const worker = new TabixWorker();\n  worker.postMessage({ kind, data: { variant, index } });\n  return new TabixIndexedFileWorker(worker);\n}\n\n/**\n * Create TabixIndexedFile proxy for remote VCF file\n * @param  {string} variantURL URL for compressed and index VCF file\n * @param  {string} indexURL   URL for Tabix index file\n * @return {TabixIndexedFileWorker} Proxy for TabixIndexedFile\n */\nexport function createTabixFileFromURL(variantURL, indexURL) {\n  return createTabixFileWorker('construct-url', variantURL, indexURL);\n}\n\n/**\n * Create TabixIndexedFile proxy for local VCF file\n * @param  {string} variantFile File object for compressed and index VCF file\n * @param  {string} indexFile   File object for Tabix index file\n * @return {TabixIndexedFileWorker} Proxy for TabixIndexedFile\n */\nexport function createTabixFileFromFile(variantFile, indexFile) {\n  return createTabixFileWorker('construct-file', variantFile, indexFile);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport {\n  UncontrolledAlert,\n  Col,\n  Row,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n  FormText,\n  Button\n} from 'reactstrap';\nimport styled from 'styled-components';\nimport { VCFSource, Ref } from 'myseq-vcf';\nimport { parse } from 'query-string';\nimport {\n  createTabixFileFromURL,\n  createTabixFileFromFile\n} from './TabixIndexedFileWorker';\n\nconst Icon = styled.i`\n  font-size: 36px;\n`;\n\nconst InlineIcon = styled.i`\n  font-size: 1rem;\n`;\n\nfunction VCFLink(props) {\n  return (\n    <a\n      href={props.url}\n      onClick={evt => {\n        evt.preventDefault();\n        props.setURL(\n          props.url,\n          props.tbi || `${props.url}.tbi`,\n          props.reference,\n          props.settings\n        );\n      }}\n    >\n      {props.children}\n    </a>\n  );\n}\n\nVCFLink.propTypes = {\n  url: PropTypes.string.isRequired,\n  tbi: PropTypes.string,\n  reference: PropTypes.instanceOf(Ref.ReferenceGenome).isRequired,\n  setURL: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  settings: PropTypes.shape({ assumeRefRef: PropTypes.bool })\n};\n\nVCFLink.defaultProps = {\n  tbi: undefined,\n  settings: undefined\n};\n\nclass LoadVcfFile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirectToReferrer: false,\n      url: '',\n      fileError: false,\n      fileHelpMessage: '',\n      urlError: false,\n      urlHelpMessage: ''\n    };\n\n    this.handleFiles = this.handleFiles.bind(this);\n    this.updateURL = this.updateURL.bind(this);\n    this.handleURL = this.handleURL.bind(this);\n    this.updateAndHandleURL = this.updateAndHandleURL.bind(this);\n  }\n\n  componentDidMount() {\n    const { from } = this.props.location.state || {\n      from: { pathname: '/' }\n    };\n    if (from.search) {\n      // Look for vcf and tbi keys in in the query string to automatically load source\n      const query = parse(from.search);\n      if (query.vcf) {\n        const url = query.vcf.trim();\n        try {\n          // Create TabixIndexedFile on web worker thread\n          const indexedFile = createTabixFileFromURL(\n            url,\n            (query.tbi || `${url}.tbi`).trim()\n          );\n          const vcfSource = new VCFSource(indexedFile);\n\n          // Notify application of new source\n          this.props.setSource(vcfSource);\n          this.setState({ url, redirectToReferrer: true });\n        } catch (err) {\n          this.setState({\n            url,\n            urlError: true,\n            urlHelpMessage: err.message\n          });\n        }\n      }\n      if (query.assumeRefRef) {\n        this.props.updateSettings({ assumeRefRef: true });\n      }\n    }\n  }\n\n  setSourceFromURL(variantURL, indexURL, reference, settings) {\n    try {\n      // Create TabixIndexedFile on web worker thread\n      const indexedFile = createTabixFileFromURL(variantURL, indexURL);\n      const vcfSource = new VCFSource(indexedFile, reference);\n\n      // Notify application of new source\n      this.props.setSource(vcfSource);\n      if (settings) {\n        this.props.updateSettings(settings); // Set any predefined settings\n      }\n      this.setState({ redirectToReferrer: true });\n    } catch (err) {\n      this.setState({ urlError: true, urlHelpMessage: err.message });\n    }\n  }\n\n  handleFiles(evt) {\n    try {\n      const fileList = evt.target.files;\n      if (fileList.length < 2) {\n        throw new Error(\n          'Only 1 file selected. Did you select both the VCF and its index file?'\n        );\n      } else if (fileList.length > 2) {\n        throw new Error(\n          'Too many files selected. Only one VCF file can be loaded at a time.'\n        );\n      }\n\n      let [variantFile, indexFile] = Array.from(fileList);\n      if (\n        variantFile.name.endsWith('.tbi') &&\n        !indexFile.name.endsWith('.tbi')\n      ) {\n        [variantFile, indexFile] = [indexFile, variantFile];\n      }\n\n      if (!indexFile.name.endsWith('.tbi')) {\n        throw new Error(\n          'Missing index file. Did you select the VCF file (\".vcf.gz\") and its index file (\".vcf.gz.tbi\")?'\n        );\n      }\n\n      // We won't know if this was a valid source until well after this function returns\n      // Create TabixIndexedFile on web worker thread\n      const vcfSource = new VCFSource(\n        createTabixFileFromFile(variantFile, indexFile)\n      );\n\n      // Notify application of new source\n      this.props.setSource(vcfSource);\n      this.setState({ redirectToReferrer: true });\n    } catch (err) {\n      this.setState({ fileError: true, fileHelpMessage: err.message });\n    }\n  }\n\n  updateURL(evt) {\n    this.setState({ url: evt.target.value });\n  }\n\n  handleURL(evt) {\n    evt.preventDefault();\n    const url = this.state.url.trim();\n    this.setSourceFromURL(url, `${url}.tbi`);\n  }\n\n  updateAndHandleURL(variantURL, indexURL, reference, settings) {\n    this.setState({ url: variantURL });\n    this.setSourceFromURL(variantURL, indexURL, reference, settings);\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      const { from } = this.props.location.state || { from: { pathname: '/' } };\n      return <Redirect to={from} />;\n    }\n\n    return (\n      <div>\n        <UncontrolledAlert color=\"info\">\n          <p>\n            MySeq is a single-page web application for privacy-protecting\n            personal genome analysis.{' '}\n            <b>MySeq is for educational and research use only</b>. MySeq is not\n            intended for diagnostic use or medical decision-making. Please\n            consult a health care professional with any medical questions or\n            concerns. By using MySeq (this website) you agree that you accept\n            the <Link to=\"/help/terms\">Terms and Conditions</Link> and are aware\n            of the potential risks and benefits of genome analysis.\n          </p>\n\n          <p>\n            To get started, load a Tabix-indexed VCF file using one of the\n            approaches below. You can switch between the different analyses\n            using the \"Analyses\" dropdown menu in the header above. Click on the{' '}\n            <Link to=\"/help\">\n              help button (\n              <InlineIcon className=\"material-icons\">help</InlineIcon>)\n            </Link>{' '}\n            to learn more about using MySeq.\n          </p>\n        </UncontrolledAlert>\n        <h3>Load Your Input File in One of Three Ways</h3>\n        <Form>\n          <FormGroup row>\n            <Col xs=\"auto\">\n              <Icon className=\"material-icons\">folder</Icon>\n            </Col>\n            <Col>\n              <Label for=\"local-file\">\n                Load variants from a local VCF file\n              </Label>\n              <Input\n                id=\"local-file\"\n                type=\"file\"\n                multiple\n                onChange={this.handleFiles}\n                invalid={this.state.fileError}\n              />\n              <FormFeedback>{this.state.fileHelpMessage}</FormFeedback>\n              <FormText>\n                Select both the &ldquo;.vcf.gz&rdquo; and\n                &ldquo;.vcf.gz.tbi&rdquo; files\n              </FormText>\n            </Col>\n          </FormGroup>\n        </Form>\n        <Form onSubmit={this.handleURL}>\n          <FormGroup row>\n            <Col xs=\"auto\">\n              <Icon className=\"material-icons\">cloud</Icon>\n            </Col>\n            <Col xs={8} lg={6}>\n              <Label for=\"remote-file\">\n                Load variants from a remote VCF file\n              </Label>\n              <Row>\n                <Col>\n                  <Input\n                    id=\"remote-file\"\n                    type=\"text\"\n                    onChange={this.updateURL}\n                    invalid={this.state.urlError}\n                  />\n                  <FormFeedback>{this.state.urlHelpMessage}</FormFeedback>\n                </Col>\n                <Col xs=\"auto\">\n                  <Button type=\"submit\">Load File</Button>\n                </Col>\n              </Row>\n              <FormText>\n                The &ldquo;.tbi&rdquo; extension is added to obtain the URL of\n                the index file\n              </FormText>\n            </Col>\n          </FormGroup>\n        </Form>\n        <Row>\n          <Col xs=\"auto\">\n            <Icon className=\"material-icons\">public</Icon>\n          </Col>\n          <Col>\n            <div>\n              <Label>Load publicly available VCF files</Label>\n            </div>\n            <VCFLink\n              url=\"https://skylight.middlebury.edu/~mlinderman/data/NA12878_GIAB_highconf_CG-IllFB-IllGATKHC-Ion-Solid-10X_CHROM1-X_v3.3_highconf.vcf.gz\"\n              reference={Ref.b37Reference}\n              setURL={this.updateAndHandleURL}\n              settings={{ assumeRefRef: true }}\n            >\n              NA12878\n            </VCFLink>\n            <br />\n            <VCFLink\n              url=\"https://skylight.middlebury.edu/~mlinderman/data/HG001_GRCh38_GIAB_highconf_CG-IllFB-IllGATKHC-Ion-10X-SOLID_CHROM1-X_v.3.3.2_highconf_PGandRTGphasetransfer.vcf.gz\"\n              reference={Ref.hg38Reference}\n              setURL={this.updateAndHandleURL}\n              settings={{ assumeRefRef: true }}\n            >\n              NA12878 (hg38)\n            </VCFLink>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nLoadVcfFile.propTypes = {\n  setSource: PropTypes.func.isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.shape({ from: PropTypes.object })\n  }).isRequired,\n  updateSettings: PropTypes.func.isRequired\n};\n\nexport default LoadVcfFile;\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\n\nimport SettingsContext, {\n  withSettings,\n  settingsPropType\n} from './SettingsContext';\nimport SourceContext from './SourceContext';\n\nexport { SettingsContext, withSettings, settingsPropType };\n\nexport function withSourceAndSettings(Component) {\n  return function SourceAndSettingsComponent(props) {\n    return (\n      <SettingsContext.Consumer>\n        {settings => (\n          <SourceContext.Consumer>\n            {source => (\n              <Component settings={settings} source={source} {...props} />\n            )}\n          </SourceContext.Consumer>\n        )}\n      </SettingsContext.Consumer>\n    );\n  };\n}\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport isString from 'lodash/isString';\nimport isArrayLikeObject from 'lodash/isArrayLikeObject';\nimport { stringify } from 'query-string';\nimport { VCFVariant, Ref } from 'myseq-vcf';\n\nconst Icon = styled.i.attrs({\n  className: 'material-icons'\n})`\n  font-size: 100%;\n  vertical-align: text-bottom;\n`;\n\nexport function PubMed(props) {\n  const { pubmedId } = props;\n  if (pubmedId && !isArrayLikeObject(pubmedId)) {\n    return (\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        href={`https://www.ncbi.nlm.nih.gov/pubmed/${pubmedId}`}\n      >\n        {props.children || `PMID ${pubmedId}`}\n        <Icon>launch</Icon>\n      </a>\n    );\n  } else if (pubmedId) {\n    return pubmedId.map(anPubmed => (\n      <PubMed key={anPubmed} pubmedId={anPubmed} />\n    ));\n  }\n  return null;\n}\n\nPubMed.propTypes = {\n  pubmedId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  children: PropTypes.node\n};\n\nPubMed.defaultProps = {\n  pubmedId: undefined,\n  children: null\n};\n\nexport function DbSnp(props) {\n  const { rsId } = props;\n  if (rsId && isString(rsId)) {\n    return (\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        href={`https://www.ncbi.nlm.nih.gov/snp/${rsId}`}\n      >\n        {rsId}\n        <Icon>launch</Icon>\n      </a>\n    );\n  } else if (rsId && isArrayLikeObject(rsId)) {\n    return props.rsId.map((anRsId, i) => [\n      i > 0 && ', ',\n      <DbSnp key={anRsId} rsId={anRsId} />\n    ]);\n  }\n  return null;\n}\n\nDbSnp.propTypes = {\n  rsId: PropTypes.oneOfType([PropTypes.string, PropTypes.array])\n};\n\nDbSnp.defaultProps = {\n  rsId: undefined\n};\n\nexport function ClinVar(props) {\n  const { variantId, variant } = props;\n  if (variantId) {\n    return (\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        href={`https://www.ncbi.nlm.nih.gov/clinvar/variation/${variantId}`}\n      >\n        {props.children || 'ClinVar Variant'}\n        <Icon>launch</Icon>\n      </a>\n    );\n  } else if (variant) {\n    // Search by coordinates\n    const searchTerm = `${variant.contig}[Chromosome] AND ${\n      variant.position\n    }[Base Position for Assembly GRCh37]`;\n    return (\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        href={`https://www.ncbi.nlm.nih.gov/clinvar/?term=${encodeURIComponent(\n          searchTerm\n        )}`}\n      >\n        {props.children || 'ClinVar Search'}\n        <Icon>launch</Icon>\n      </a>\n    );\n  }\n  return null;\n}\n\nClinVar.propTypes = {\n  variantId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  variant: PropTypes.instanceOf(VCFVariant),\n  children: PropTypes.node\n};\n\nClinVar.defaultProps = {\n  variantId: undefined,\n  variant: undefined,\n  children: null\n};\n\nexport function Omim(props) {\n  const { mimNumber, variant } = props;\n  if (mimNumber) {\n    return (\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        href={`https://www.omim.org/entry/${mimNumber.replace('.', '#')}`}\n      >\n        {props.children || 'OMIM Entry'}\n        <Icon>launch</Icon>\n      </a>\n    );\n  } else if (variant && variant.id) {\n    return (\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        href={`https://www.omim.org/search/?index=entry&start=1&search=${encodeURIComponent(\n          variant.id.join(' ')\n        )}&sort=score+desc%2C+prefix_sort+desc&limit=10&date_created_from=&date_created_to=&date_updated_from=&date_updated_to=`}\n      >\n        {props.children || 'OMIM Search'}\n        <Icon>launch</Icon>\n      </a>\n    );\n  }\n  return null;\n}\n\nOmim.propTypes = {\n  mimNumber: PropTypes.string,\n  variant: PropTypes.instanceOf(VCFVariant),\n  children: PropTypes.node\n};\nOmim.defaultProps = {\n  mimNumber: undefined,\n  variant: undefined,\n  children: null\n};\n\nexport function SNPedia(props) {\n  const { title } = props;\n  if (title) {\n    return (\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        href={`http://snpedia.com/index.php?${stringify(props)}`}\n      >\n        {props.children || 'SNPedia'}\n        <Icon>launch</Icon>\n      </a>\n    );\n  }\n\n  return null;\n}\n\nSNPedia.propTypes = {\n  title: PropTypes.string.isRequired,\n  oldid: PropTypes.number, // eslint-disable-line\n  children: PropTypes.node\n};\nSNPedia.defaultProps = {\n  oldid: undefined,\n  children: null\n};\n\nexport function PharmGKB(props) {\n  const { PAid, PAidGuide } = props;\n  if (PAid) {\n    return (\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        href={`https://www.pharmgkb.org/chemical/${PAid}/guidelineAnnotation/${PAidGuide}`}\n      >\n        {props.children || 'PharmGKB'}\n        <Icon>launch</Icon>\n      </a>\n    );\n  }\n\n  return null;\n}\n\nPharmGKB.propTypes = {\n  PAid: PropTypes.string.isRequired,\n  PAidGuide: PropTypes.string.isRequired,\n  children: PropTypes.node\n};\nPharmGKB.defaultProps = {\n  children: null\n};\n\nexport function ExternalLink(props) {\n  return (\n    <a target=\"_blank\" rel=\"noreferrer noopener\" href={props.href}>\n      {props.children}\n      <Icon>launch</Icon>\n    </a>\n  );\n}\n\nExternalLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\n\nexport function GnomAD(props) {\n  const { variant } = props;\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      href={`http://gnomad.broadinstitute.org/variant/${variant.contig}-${\n        variant.position\n      }-${variant.ref}-${variant.alt[0]}`}\n    >\n      {props.children}\n      <Icon>launch</Icon>\n    </a>\n  );\n}\n\nGnomAD.propTypes = {\n  variant: PropTypes.instanceOf(VCFVariant).isRequired,\n  children: PropTypes.node\n};\n\nGnomAD.defaultProps = {\n  children: 'gnomAD Search'\n};\n\nexport function GenomeBrowser(props) {\n  const { variant } = props;\n  const ctg = Ref.hg19Reference.normalizeContig(variant.contig);\n  const { position: pos } = variant;\n  const region = `${ctg}:${Math.max(pos - 25, 0)}-${pos + 25}`;\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      href={`http://genome.ucsc.edu/cgi-bin/hgTracks?db=hg19&highlight=hg19.${ctg}%3A${pos}-${pos}&position=${encodeURIComponent(\n        region\n      )}`}\n    >\n      {props.children || region}\n      <Icon>launch</Icon>\n    </a>\n  );\n}\n\nGenomeBrowser.propTypes = {\n  variant: PropTypes.instanceOf(VCFVariant).isRequired,\n  children: PropTypes.node\n};\n\nGenomeBrowser.defaultProps = {\n  children: null\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'reactstrap';\nimport styled from 'styled-components';\nimport { VCFVariant } from 'myseq-vcf';\n\nimport { DbSnp } from '../util/links';\nimport { withSettings, settingsPropType } from '../../contexts/SettingsContext';\n\nconst StyledTable = styled(Table)`\n  table-layout: fixed;\n  td {\n    white-space: nowrap;\n  }\n  td.truncate {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  td.scrollable {\n    overflow: scroll;\n    overflow-y: hidden;\n  }\n`;\n\nfunction VariantTable(props) {\n  const { sample } = props.settings;\n  return (\n    <StyledTable bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th className=\"minwidth\">Chrom</th>\n          <th>Position</th>\n          <th>Ref</th>\n          <th>Alt</th>\n          <th>ID(s)</th>\n          <th>Genotype</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.variants.map(variant => (\n          <tr\n            key={variant.toString()}\n            onClick={() => props.selectVariant(variant)}\n            className={\n              variant === props.selectedVariant ? 'table-primary' : undefined\n            }\n          >\n            <td className=\"minwidth\">{variant.contig}</td>\n            <td>{variant.position}</td>\n            <td className=\"truncate\">{variant.ref}</td>\n            <td className=\"truncate\">{variant.alt.join(',')}</td>\n            <td className=\"scrollable\">\n              <DbSnp rsId={variant.id} />\n            </td>\n            <td className=\"truncate\">{variant.genotype(sample)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </StyledTable>\n  );\n}\n\nVariantTable.propTypes = {\n  settings: settingsPropType.isRequired,\n  variants: PropTypes.arrayOf(PropTypes.instanceOf(VCFVariant)).isRequired,\n  selectVariant: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n  selectedVariant: PropTypes.instanceOf(VCFVariant)\n};\n\nVariantTable.defaultProps = {\n  selectedVariant: undefined\n};\n\nexport default withSettings(VariantTable);\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport {\n  Nav,\n  NavItem,\n  NavLink,\n  TabPane,\n  TabContent,\n  Row,\n  Col,\n  Table\n} from 'reactstrap';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { VCFVariant, VCFSource, Ref } from 'myseq-vcf';\nimport {\n  settingsPropType,\n  withSourceAndSettings\n} from '../../contexts/context-helpers';\nimport {\n  DbSnp,\n  ClinVar,\n  Omim,\n  GnomAD,\n  GenomeBrowser,\n  ExternalLink\n} from '../util/links';\n\nconst DefList = styled.dl.attrs({\n  className: 'row'\n})`\n  line-height: 1;\n  dd {\n    min-height: 1rem;\n  }\n`;\n\nconst Label = styled.dt.attrs({\n  className: 'col-sm-5'\n})``;\n\nconst Value = styled.dd.attrs({\n  className: 'col-sm-7'\n})``;\n\nconst MoreLink = styled.button`\n  background: none !important;\n  color: #007bff;\n  border: none;\n  padding: 0 !important;\n  font: inherit;\n  cursor: pointer;\n`;\n\nfunction GlobalAF(props) {\n  const { gnomadExome, gnomadGenome } = props;\n  if (isEmpty(gnomadExome) && isEmpty(gnomadGenome)) {\n    return null;\n  }\n  const ac = get(gnomadExome, 'ac.ac', 0) + get(gnomadGenome, 'ac.ac', 0);\n  const an = get(gnomadExome, 'an.an', 0) + get(gnomadGenome, 'an.an', 0);\n  return (an === 0 ? 0.0 : ac / an).toLocaleString({\n    maximumFractionDigits: 5\n  });\n}\n\nGlobalAF.propTypes = {\n  gnomadExome: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  gnomadGenome: PropTypes.object // eslint-disable-line react/forbid-prop-types\n};\n\nGlobalAF.defaultProps = {\n  gnomadExome: {},\n  gnomadGenome: {}\n};\n\nfunction SnpEffEffectTable(props) {\n  if (!props.snpeff) {\n    return null;\n  }\n\n  let { ann } = props.snpeff;\n  if (!isArray(ann)) {\n    ann = [ann];\n  }\n\n  return (\n    <Table bordered size=\"sm\" className=\"mb-0\">\n      <caption className=\"pt-1\">\n        Selected variant annotations predicted by SnpEff.{' '}\n        <MoreLink onClick={props.moreHandler}>More...</MoreLink>\n      </caption>\n      <thead>\n        <tr>\n          <th>Effect</th>\n          <th>Translation</th>\n        </tr>\n      </thead>\n      <tbody>\n        {ann.slice(0, props.maxDisplay).map(anAnn => {\n          const {\n            effect,\n            feature_id: featureId,\n            gene_id: geneId,\n            hgvs_c: hgvsC,\n            hgvs_p: hgvsP\n          } = anAnn; // eslint-disable-line\n          return (\n            <tr key={`${featureId}:${hgvsC}`}>\n              <td>{effect}</td>\n              <td>\n                {featureId}\n                {geneId && `(${geneId})`}:{hgvsC}\n                {hgvsP && ` (${hgvsP})`}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n}\n\nSnpEffEffectTable.propTypes = {\n  snpeff: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  maxDisplay: PropTypes.number,\n  moreHandler: PropTypes.func.isRequired\n};\n\nSnpEffEffectTable.defaultProps = {\n  snpeff: undefined,\n  maxDisplay: Number.MAX_SAFE_INTEGER\n};\n\nfunction PopulationTab(props) {\n  const { gnomadGenome, gnomadExome, variant } = props;\n  if (isEmpty(gnomadGenome) && isEmpty(gnomadExome)) {\n    return <p>No population data available from gnomAD.</p>;\n  }\n\n  function combined(key) {\n    return get(gnomadExome, key, 0) + get(gnomadGenome, key, 0);\n  }\n\n  const pops = {\n    afr: { name: 'African' },\n    amr: { name: 'Latino' },\n    asj: { name: 'Ashkenazi Jewish' },\n    eas: { name: 'East Asian' },\n    fin: { name: 'European (Finnish)' },\n    nfe: { name: 'European (Non-Finnish)' },\n    oth: { name: 'Other' }\n  };\n  Object.keys(pops).forEach(key => {\n    const ac = combined(`ac.ac_${key}`);\n    const an = combined(`an.an_${key}`);\n    const af = an === 0 ? 0.0 : ac / an;\n    pops[key] = Object.assign(pops[key], { ac, an, af });\n  });\n\n  const keys = Object.keys(pops).sort((a, b) => pops[b].af - pops[a].af);\n\n  const totalAC = combined('ac.ac');\n  const totalAN = combined('an.an');\n  const totalAF = totalAN === 0 ? 0.0 : totalAC / totalAN;\n\n  return (\n    <Row>\n      <Col md={8}>\n        <Table bordered size=\"sm\">\n          <caption>\n            Population data derived from the combined exome and genome data\n            available at <GnomAD variant={variant}>gnomAD</GnomAD>.\n          </caption>\n          <thead>\n            <tr>\n              <th>Population</th>\n              <th>Allele Count</th>\n              <th>Allele Number</th>\n              <th>Allele Frequency</th>\n            </tr>\n          </thead>\n          <tbody>\n            {keys.map(key => {\n              const { name, ac, an, af } = pops[key];\n              return (\n                <tr key={key}>\n                  <td>{name}</td>\n                  <td>{ac}</td>\n                  <td>{an}</td>\n                  <td>{af.toLocaleString({ maximumFractionDigits: 5 })}</td>\n                </tr>\n              );\n            })}\n            <tr>\n              <th>Total</th>\n              <th>{totalAC}</th>\n              <th>{totalAN}</th>\n              <th>{totalAF.toLocaleString({ maximumFractionDigits: 5 })}</th>\n            </tr>\n          </tbody>\n        </Table>\n      </Col>\n    </Row>\n  );\n}\n\nPopulationTab.propTypes = {\n  gnomadExome: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  gnomadGenome: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  variant: PropTypes.instanceOf(VCFVariant).isRequired\n};\n\nPopulationTab.defaultProps = {\n  gnomadExome: {},\n  gnomadGenome: {}\n};\n\nfunction ClinVarTab(props) {\n  let { rcv } = props.clinvar;\n  if (!rcv) {\n    return (\n      <p>\n        No ClinVar annotations availabe for this variant;{' '}\n        <ClinVar variant={props.variant}>search ClinVar instead</ClinVar>.\n      </p>\n    );\n  }\n\n  if (!isArray(rcv)) {\n    rcv = [rcv];\n  }\n\n  const omim = get(props.clinvar, 'omim');\n\n  return (\n    <Row>\n      <Col md={10}>\n        <Table bordered size=\"sm\">\n          <caption>\n            ClinVar records for this{' '}\n            <ClinVar variantId={get(props.clinvar, 'variant_id')}>\n              ClinVar variant\n            </ClinVar>\n            .{' '}\n            {omim && (\n              <span>\n                Additional information may be available in the{' '}\n                <Omim mimNumber={omim}>OMIM database</Omim>.\n              </span>\n            )}\n          </caption>\n          <thead>\n            <tr>\n              <th>Accession</th>\n              <th>Significance</th>\n              <th>Condition</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rcv.map(entry => {\n              const {\n                accession,\n                conditions,\n                clinical_significance,\n                review_status // eslint-disable-line camelcase\n              } = entry;\n              const medgen = get(conditions, 'identifiers.medgen');\n              return (\n                <tr key={accession}>\n                  <td>\n                    <ExternalLink\n                      href={`https://www.ncbi.nlm.nih.gov/clinvar/${accession}`}\n                    >\n                      {accession}\n                    </ExternalLink>\n                  </td>\n                  <td>{clinical_significance}</td>\n                  <td>\n                    {medgen ? (\n                      <ExternalLink\n                        href={`https://www.ncbi.nlm.nih.gov/medgen/${medgen}`}\n                      >\n                        {conditions.name}\n                      </ExternalLink>\n                    ) : (\n                      conditions.name\n                    )}\n                  </td>\n                  <td>{review_status}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Col>\n    </Row>\n  );\n}\n\nClinVarTab.propTypes = {\n  clinvar: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  variant: PropTypes.instanceOf(VCFVariant).isRequired\n};\n\nClinVarTab.defaultProps = {\n  clinvar: {}\n};\n\nfunction FunctionalTab(props) {\n  if (!props.snpeff) {\n    return <p>No functional annotations available for this variant.</p>;\n  }\n\n  let { ann } = props.snpeff;\n  if (!isArray(ann)) {\n    ann = [ann];\n  }\n\n  return (\n    <Table bordered size=\"sm\" className=\"mb-0\">\n      <caption className=\"pt-1\">\n        Fuctional annotations predicted by SnpEff.\n      </caption>\n      <thead>\n        <tr>\n          <th>Effect</th>\n          <th>Gene</th>\n          <th>Transcript</th>\n          <th>DNA</th>\n          <th>Protein</th>\n        </tr>\n      </thead>\n      <tbody>\n        {ann.map(anAnn => {\n          const {\n            effect,\n            feature_id: featureId,\n            gene_id: geneId,\n            hgvs_c: hgvsC,\n            hgvs_p: hgvsP\n          } = anAnn;\n          return (\n            <tr key={`${featureId}:${hgvsC}`}>\n              <td>{effect}</td>\n              <td>{geneId}</td>\n              <td>{featureId}</td>\n              <td>{hgvsC}</td>\n              <td>{hgvsP}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n}\n\nFunctionalTab.propTypes = {\n  snpeff: PropTypes.object // eslint-disable-line react/forbid-prop-types\n};\n\nFunctionalTab.defaultProps = {\n  snpeff: undefined\n};\n\nexport class VariantDetailImpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detail: undefined,\n      activeTab: 'sum',\n      helpMessage: undefined\n    };\n    this.switchTab = this.switchTab.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateVariantDetail(this.props.variant);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.variant !== this.props.variant) {\n      this.updateVariantDetail(this.props.variant);\n    }\n  }\n\n  updateVariantDetail(variant) {\n    // Only fetch detail if permitted to access external services\n    if (!this.props.settings.external) {\n      this.setState({\n        detail: undefined,\n        helpMessage:\n          'To obtain more information about a variant enable external queries in the MySeq settings'\n      });\n    } else if (variant.alt.length !== 1) {\n      this.setState({\n        detail: undefined,\n        helpMessage:\n          'Variant annotation is only supported for bi-allelic variants'\n      });\n    } else {\n      this.props.source\n        .reference()\n        .then(reference => {\n          const { shortName } = reference;\n          if (shortName !== 'b37' && shortName !== 'hg19') {\n            // TODO: Query by rsID if available\n            throw new Error(\n              'Variant annotation is only supported for the hg19/b37 reference genome'\n            );\n          }\n\n          // MyVariantInfo uses b37-style chromosome names\n          const chrom = Ref.b37Reference.normalizeContig(variant.contig);\n          const alt = variant.alt[0];\n\n          return fetch(\n            `https://myvariant.info/v1/query?q=chrom:${chrom} AND vcf.position:${\n              variant.position\n            } AND vcf.ref:${variant.ref} AND vcf.alt:${alt}`,\n            { mode: 'cors', 'Content-Type': 'application/json' }\n          );\n        })\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error('No additional detail available for variant');\n        })\n        .then(results => {\n          if (results.total === 1) {\n            this.setState({ detail: results.hits[0], helpMessage: undefined });\n          } else {\n            throw new Error('No additional detail available for variant');\n          }\n        })\n        .catch(err => {\n          this.setState({ detail: undefined, helpMessage: err.message });\n        });\n    }\n  }\n\n  switchTab(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab });\n    }\n  }\n\n  renderTab(name, label, klasses = {}) {\n    return (\n      <NavItem>\n        <NavLink\n          className={classNames(\n            Object.assign(klasses, {\n              active: this.state.activeTab === name\n            })\n          )}\n          onClick={() => {\n            this.switchTab(name);\n          }}\n        >\n          {label}\n        </NavLink>\n      </NavItem>\n    );\n  }\n\n  render() {\n    const { variant, close } = this.props;\n    const { detail, helpMessage } = this.state;\n\n    const snpeff = get(detail, 'snpeff');\n\n    return (\n      <div>\n        <hr />\n        <button\n          type=\"button\"\n          className=\"close\"\n          aria-label=\"Close\"\n          onClick={close}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h4>{variant.toString()}</h4>\n        {helpMessage && <p className=\"text-danger\">{helpMessage}</p>}\n        <Nav tabs>\n          {this.renderTab('sum', 'Summary')}\n          {this.renderTab('pop', 'Population')}\n          {this.renderTab('func', 'Functional')}\n          {this.renderTab('clin', 'Clinical')}\n          {this.renderTab('lit', 'Literature', { disabled: true })}\n        </Nav>\n        <TabContent activeTab={this.state.activeTab} className=\"pt-2\">\n          <TabPane tabId=\"sum\">\n            <Row>\n              <Col md={5}>\n                <DefList>\n                  <Label>VCF Filter:</Label>\n                  <Value>{variant.filter || 'Undefined'}</Value>\n                  <Label>dbSNP:</Label>\n                  <Value>\n                    <DbSnp rsId={get(detail, 'dbsnp.rsid') || variant.id} />\n                  </Value>\n                  <Label>Allele Frequency:</Label>\n                  <Value>\n                    <GlobalAF\n                      gnomadExome={get(detail, 'gnomad_exome')}\n                      gnomadGenome={get(detail, 'gnomad_genome')}\n                    />\n                  </Value>\n                  <Label>Genome Browser:</Label>\n                  <Value>\n                    <GenomeBrowser variant={variant} />\n                  </Value>\n                  <Label>ClinVar:</Label>\n                  <Value>\n                    <ClinVar\n                      variantId={get(detail, 'clinvar.variant_id')}\n                      variant={variant}\n                    />\n                  </Value>\n                  <Label>OMIM:</Label>\n                  <Value>\n                    <Omim\n                      mimNumber={get(detail, 'clinvar.omim')}\n                      variant={variant}\n                    />\n                  </Value>\n                  <Label>gnomAD:</Label>\n                  <Value>\n                    <GnomAD variant={variant} />\n                  </Value>\n                </DefList>\n              </Col>\n              {snpeff && (\n                <Col md={7} className=\"d-none d-md-block\">\n                  <SnpEffEffectTable\n                    snpeff={snpeff}\n                    maxDisplay={5}\n                    moreHandler={() => this.switchTab('func')}\n                  />\n                </Col>\n              )}\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"pop\">\n            <PopulationTab\n              gnomadExome={get(detail, 'gnomad_exome')}\n              gnomadGenome={get(detail, 'gnomad_genome')}\n              variant={variant}\n            />\n          </TabPane>\n          <TabPane tabId=\"func\">\n            <FunctionalTab snpeff={snpeff} />\n          </TabPane>\n          <TabPane tabId=\"clin\">\n            <ClinVarTab clinvar={get(detail, 'clinvar')} variant={variant} />\n          </TabPane>\n          <TabPane tabId=\"lit\">\n            <p>\n              Literature annotations will be implemented in a future releasse\n            </p>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nVariantDetailImpl.propTypes = {\n  variant: PropTypes.instanceOf(VCFVariant).isRequired,\n  close: PropTypes.func.isRequired,\n  settings: settingsPropType.isRequired,\n  source: PropTypes.instanceOf(VCFSource).isRequired\n};\n\nexport default withSourceAndSettings(VariantDetailImpl);\n","/* eslint-disable react/no-multi-comp */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Col,\n  Row,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n  FormText,\n  Button\n} from 'reactstrap';\nimport { VCFSource } from 'myseq-vcf';\nimport flatten from 'lodash/flatten';\nimport identity from 'lodash/identity';\nimport { parse } from 'query-string';\nimport {\n  withSourceAndSettings,\n  settingsPropType\n} from '../../contexts/context-helpers';\nimport VariantTable from './VariantTable';\nimport VariantDetail from './VariantDetail';\n\nconst QueryExample = styled.button`\n  background: none !important;\n  color: #007bff;\n  border: none;\n  padding: 0 !important;\n  font: inherit;\n  cursor: pointer;\n`;\n\n// The height in the calc is determined by the navbar at the top\nconst QueryWrapper = styled.div.attrs({\n  className: 'd-flex flex-column'\n})`\n  height: calc(100vh - 71px);\n`;\n\n// Have the query results scroll in favor of the detail view below\nconst QueryTable = styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n  min-height: 100px;\n`;\n\nconst QueryFixed = styled.div`\n  flex-shrink: 0;\n`;\n\nexport class CoordinateSearchBoxImpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      region: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleQueries = this.handleQueries.bind(this);\n    this.handleQuery = this.handleQuery.bind(this);\n    this.createSearch = this.createSearch.bind(this);\n  }\n\n  componentDidMount() {\n    const { search } = this.props.location;\n    if (search) {\n      // Look for query in the query string to automatically create query\n      const query = parse(search);\n      if (query.query) {\n        this.setState({ region: query.query });\n        this.handleQueries(query.query);\n      }\n    }\n  }\n\n  handleSearchChange(evt) {\n    this.setState({ region: evt.target.value });\n  }\n\n  handleQuery(region) {\n    if (region.startsWith('rs')) {\n      // Obtain coordinates for rsID if external queries are permitted\n      if (!this.props.settings.external) {\n        return Promise.reject(\n          new Error(\n            'Querying external services must be enabled to search by rsID'\n          )\n        );\n      }\n      return fetch(\n        `https://myvariant.info/v1/query?q=dbsnp.rsid:${region}&fields=dbsnp.chrom,dbsnp.hg19,dbnsfp.chrom,dbnsfp.hg38`,\n        { mode: 'cors', 'Content-Type': 'application/json' }\n      )\n        .then(response => {\n          return response.ok ? response.json() : { total: 0 };\n        })\n        .then(results => {\n          if (results.total >= 1) {\n            return this.props.source.reference().then(reference => {\n              const { shortName } = reference;\n              if (shortName === 'hg19' || shortName === 'b37') {\n                const { chrom, hg19 } = results.hits[0].dbsnp;\n                return `${chrom}:${hg19.start}-${hg19.end}`;\n              } else if (shortName === 'hg38' && results.hits[0].dbnsfp) {\n                const { chrom, hg38 } = results.hits[0].dbnsfp;\n                return `${chrom}:${hg38.start}-${hg38.end}`;\n              }\n              throw new Error(\n                'Unable to obtain coordinates for current reference'\n              );\n            });\n          }\n          throw new Error('Unknown or invalid rsID');\n        });\n    } else if (region.includes(':')) {\n      // Query is likely specified as a region, i.e. chr1:1-100\n      return Promise.resolve(region);\n    } else {\n      // eslint-disable-line no-else-return\n      // Attempt query as a gene symbol\n      if (!this.props.settings.external) {\n        return Promise.reject(\n          new Error(\n            'Querying external services must be enabled to search by gene'\n          )\n        );\n      }\n      return fetch(\n        `https://mygene.info/v3/query?q=symbol:${region}&fields=genomic_pos,genomic_pos_hg19&species=human`,\n        { mode: 'cors', 'Content-Type': 'application/json' }\n      )\n        .then(response => {\n          return response.ok ? response.json() : { total: 0 };\n        })\n        .then(results => {\n          if (results.total === 1) {\n            return this.props.source.reference().then(reference => {\n              const { shortName } = reference;\n              if (shortName === 'hg19' || shortName === 'b37') {\n                const { chr, start, end } = results.hits[0].genomic_pos_hg19;\n                return `${chr}:${start}-${end}`;\n              } else if (shortName === 'hg38') {\n                const { chr, start, end } = results.hits[0].genomic_pos;\n                return `${chr}:${start}-${end}`;\n              }\n              throw new Error(\n                'Unable to obtain coordinates for current reference'\n              );\n            });\n          }\n          throw new Error('Unknown or invalid gene symbol');\n        });\n    }\n  }\n\n  handleQueries(region) {\n    Promise.all(\n      region\n        .split(/[ ,]/)\n        .filter(identity)\n        .map(this.handleQuery)\n    ).then(this.props.coordinateQuery, this.props.coordinateQuery);\n  }\n\n  createSearch(search) {\n    return (\n      <QueryExample\n        onClick={evt => {\n          evt.preventDefault();\n          this.setState({ region: search });\n          this.handleQueries(search);\n        }}\n      >\n        {search}\n      </QueryExample>\n    );\n  }\n\n  render() {\n    // TODO: Auto load example queries\n    return (\n      <Form\n        onSubmit={evt => {\n          evt.preventDefault();\n          this.handleQueries(this.state.region);\n        }}\n      >\n        <FormGroup row>\n          <Col sm={12} md={6}>\n            <Label for=\"query-text\" hidden>\n              Query by genomic coordinates\n            </Label>\n            <Row>\n              <Col>\n                <Input\n                  id=\"query-text\"\n                  type=\"text\"\n                  value={this.state.region}\n                  onChange={this.handleSearchChange}\n                  invalid={this.props.error}\n                  placeholder=\"Query by genomic coordinates\"\n                />\n                <FormFeedback>{this.props.helpMessage}</FormFeedback>\n              </Col>\n              <Col xs=\"auto\">\n                <Button type=\"submit\">Query</Button>\n              </Col>\n            </Row>\n            <FormText>\n              Examples: chr1:1-100, {this.createSearch('chr7:141672604')},{' '}\n              {this.createSearch('BRCA1')}, {this.createSearch('rs10246939')}\n            </FormText>\n          </Col>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nCoordinateSearchBoxImpl.propTypes = {\n  source: PropTypes.instanceOf(VCFSource).isRequired,\n  settings: settingsPropType.isRequired,\n  coordinateQuery: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n  helpMessage: PropTypes.string.isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string\n  })\n};\n\nCoordinateSearchBoxImpl.defaultProps = {\n  location: {}\n};\n\nconst CoordinateSearchBox = withSourceAndSettings(CoordinateSearchBoxImpl);\n\nclass VariantQuery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      region: undefined,\n      error: false,\n      helpMessage: '',\n      variants: [],\n      selectedVariant: undefined\n    };\n\n    this.handleCoordinateQuery = this.handleCoordinateQuery.bind(this);\n    this.handleSelectVariant = this.handleSelectVariant.bind(this);\n    this.handleCloseDetail = this.handleSelectVariant.bind(this, undefined);\n  }\n\n  handleCoordinateQuery(regions) {\n    const { source } = this.props;\n\n    if (regions instanceof Error) {\n      this.setState({\n        error: true,\n        helpMessage: regions.message,\n        variants: [],\n        selectedVariant: undefined\n      });\n      return;\n    }\n\n    // TODO: Normalize query (contig name, overlapping chunks, etc.)\n    source\n      .normalizeRegions(regions)\n      .then(normRegions => {\n        this.setState({\n          region: normRegions\n            .map(region => {\n              const { ctg, pos, end } = region;\n              return `${ctg}:${pos}-${end}`;\n            })\n            .join(', ')\n        });\n        return Promise.all(\n          normRegions.map(region => {\n            const { ctg, pos, end } = region;\n            return source.variants(ctg, pos, end);\n          })\n        );\n      })\n      .then(flatten)\n      .then(variants => {\n        this.setState({\n          variants,\n          selectedVariant: undefined,\n          error: false,\n          helpMessage: ''\n        });\n      })\n      .catch(err => {\n        this.setState({\n          error: true,\n          helpMessage: err.message,\n          region: undefined,\n          variants: [],\n          selectedVariant: undefined\n        });\n      });\n  }\n\n  handleSelectVariant(variant) {\n    this.setState({ selectedVariant: variant });\n  }\n\n  render() {\n    const { region, variants, selectedVariant } = this.state;\n    return (\n      <QueryWrapper>\n        <QueryFixed>\n          <CoordinateSearchBox\n            location={this.props.location}\n            coordinateQuery={this.handleCoordinateQuery}\n            error={this.state.error}\n            helpMessage={this.state.helpMessage}\n          />\n        </QueryFixed>\n        {region && (\n          <QueryTable>\n            <Row>\n              <Col sm={12} md={8}>\n                <p className=\"mb-2\">\n                  Listing {variants.length} variant(s) in {region}\n                </p>\n                <VariantTable\n                  variants={variants}\n                  selectVariant={this.handleSelectVariant}\n                  selectedVariant={selectedVariant}\n                />\n              </Col>\n              <Col md={4} className=\"d-none d-md-block\">\n                <p>\n                  Click on a row to display more detail about a specific\n                  variant.\n                </p>\n              </Col>\n            </Row>\n          </QueryTable>\n        )}\n        {selectedVariant && (\n          <QueryFixed>\n            <VariantDetail\n              variant={selectedVariant}\n              close={this.handleCloseDetail}\n            />\n          </QueryFixed>\n        )}\n      </QueryWrapper>\n    );\n  }\n}\n\nVariantQuery.propTypes = {\n  source: PropTypes.instanceOf(VCFSource).isRequired\n};\n\nexport default VariantQuery;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  Nav,\n  NavItem,\n  NavLink,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu\n} from 'reactstrap';\nimport SourceRoute from './SourceRoute';\n\nclass AnalysisSelector extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdownOpen: false\n    };\n\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n  }\n\n  toggleDropdown() {\n    this.setState({ dropdownOpen: !this.state.dropdownOpen });\n  }\n\n  render() {\n    const activeAnalysis = this.props.analyses.find(\n      analysis => this.props.location.pathname === analysis.route\n    );\n    const { category, categoryPath } = this.props;\n    return (\n      <div>\n        <Nav>\n          <NavItem>\n            <NavLink className=\"pl-0\" tag={Link} to={categoryPath}>\n              {category}\n            </NavLink>\n          </NavItem>\n          <NavItem className=\"nav-link\">/</NavItem>\n          <Dropdown\n            nav\n            isOpen={this.state.dropdownOpen}\n            toggle={this.toggleDropdown}\n          >\n            <DropdownToggle nav caret>\n              {activeAnalysis ? activeAnalysis.title : this.props.dropdownText}\n            </DropdownToggle>\n            <DropdownMenu>\n              {this.props.analyses.map(analysis => (\n                <DropdownItem\n                  key={analysis.route}\n                  tag={Link}\n                  to={analysis.route}\n                >\n                  {analysis.title}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          </Dropdown>\n        </Nav>\n        {this.props.analyses.map(analysis => (\n          <SourceRoute\n            key={analysis.route}\n            path={analysis.route}\n            exact\n            component={analysis.component}\n          />\n        ))}\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nAnalysisSelector.propTypes = {\n  location: PropTypes.shape({ pathname: PropTypes.string }).isRequired,\n  analyses: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      route: PropTypes.string,\n      component: PropTypes.func\n    })\n  ).isRequired,\n  category: PropTypes.string.isRequired,\n  categoryPath: PropTypes.string.isRequired,\n  dropdownText: PropTypes.string,\n  children: PropTypes.node\n};\n\nAnalysisSelector.defaultProps = {\n  dropdownText: 'Choose analysis',\n  children: null\n};\n\nexport default AnalysisSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nexport default function SettingsAlert(props) {\n  return (\n    <Alert color=\"info\" {...props}>\n      <h4>Nothing highlighted or missing entries?</h4>\n      <p>\n        If you are analyzing whole genome sequencing (WGS) data consider setting\n        MySeq to assume the genotype of missing variants is the same as the\n        reference genome. You can do so on the{' '}\n        <Link to=\"/settings\">settings</Link> page. Use the &lsquo;back&rsquo;\n        button to return to this analysis.\n      </p>\n    </Alert>\n  );\n}\n\nSettingsAlert.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert } from 'reactstrap';\n\nexport default function ReferenceAlert(props) {\n  return (\n    <Alert color=\"danger\" {...props}>\n      <h4>Unsupported Reference Genome For This Analysis</h4>\n      <p>\n        This analysis does not support the reference genome used in this VCF\n        file.\n      </p>\n    </Alert>\n  );\n}\n\nReferenceAlert.propTypes = {\n  isOpen: PropTypes.bool.isRequired\n};\n","/* eslint-disable import/prefer-default-export */\nimport PropTypes from 'prop-types';\n\n/**\n * Helper function to provide a reference-aware variant query.\n *\n * Expects hg19/b37 position as `pos` property and hg38 position as `pos_h38`\n *\n * @param {VCFSource} source VCFSource to query\n * @param {Object} variant Variant query object\n * @param {Boolean} assumeRefRef Boolean passed through to query to return synthetic\n * ref/ref genotype if variant not found\n * @returns {VCFVariant} Variant object\n */\nexport function refAwareVariantQuery(source, variant, assumeRefRef = false) {\n  return source.reference().then(reference => {\n    const { shortName } = reference;\n    if (shortName === 'hg19' || shortName === 'b37') {\n      const { ctg, pos, ref, alt } = variant;\n      return source.variant(ctg, pos, ref, alt, assumeRefRef);\n    } else if (shortName === 'hg38') {\n      const { ctg, pos_hg38: pos, ref, alt } = variant;\n      if (!pos) {\n        throw new Error(\n          'Source uses hg38 but query is not defined for that reference genome'\n        );\n      }\n      return source.variant(ctg, pos, ref, alt, assumeRefRef);\n    }\n    throw new Error('Unable to obtain coordinates for current reference');\n  });\n}\n\nexport const variantPropType = PropTypes.shape({\n  ctg: PropTypes.string.isRequired,\n  pos: PropTypes.number.isRequired,\n  pos_hg38: PropTypes.number,\n  ref: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Row, Col } from 'reactstrap';\nimport { VCFSource } from 'myseq-vcf';\nimport {\n  withSourceAndSettings,\n  settingsPropType\n} from '../../contexts/context-helpers';\nimport SettingsAlert from './SettingsAlert';\nimport ReferenceAlert from './ReferenceAlert';\nimport { DbSnp } from '../util/links';\nimport { refAwareVariantQuery, variantPropType } from '../util/query';\n\nclass SingleVariantTrait extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      genotype: undefined,\n      showSettingsAlert: false,\n      showReferenceAlert: false\n    };\n  }\n\n  componentDidMount() {\n    const { sample, assumeRefRef } = this.props.settings;\n    const query = this.props.trait.variant;\n\n    refAwareVariantQuery(this.props.source, query, assumeRefRef)\n      .then(variant => {\n        if (variant) {\n          this.setState({ genotype: variant.genotype(sample) });\n        } else if (!assumeRefRef) {\n          this.setState({ showSettingsAlert: true });\n        }\n      })\n      .catch(() => {\n        // TODO: Differentiate error types\n        this.setState({ showReferenceAlert: true });\n      });\n  }\n\n  render() {\n    const { settings, trait, children } = this.props;\n    const { showSettingsAlert, showReferenceAlert } = this.state;\n    const { variant: query } = trait;\n    return (\n      <div>\n        <h3>{trait.title}</h3>\n        <ReferenceAlert isOpen={showReferenceAlert} />\n        <SettingsAlert\n          isOpen={showSettingsAlert && !settings.assumeRefRef}\n          toggle={() => this.setState({ showSettingsAlert: false })}\n        />\n        <Row>\n          <Col md={6}>\n            Querying for variant{' '}\n            {`${query.ctg}:g.${query.pos}${query.ref}>${query.alt}`}\n            {trait.rsId && (\n              <span>\n                {' '}\n                (<DbSnp rsId={trait.rsId} />)\n              </span>\n            )}\n            :\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th>Genotype</th>\n                  <th>Phenotype</th>\n                </tr>\n              </thead>\n              <tbody>\n                {trait.association.map(assoc => (\n                  <tr\n                    key={assoc.genotype}\n                    className={\n                      this.state.genotype === assoc.genotype\n                        ? 'table-primary'\n                        : undefined\n                    }\n                  >\n                    <td>{assoc.genotype}</td>\n                    <td>{assoc.phenotype}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Col>\n          <Col md={6}>{children}</Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\n/*\nExample trait object for \"Bitter Tasting\" phenotype\n{\n  title: 'Bitter Tasting (of PTC)',\n  variant: {\n    chr: '7', pos: 141673345, ref: 'C', alt: 'G',\n  },\n  rsID: 'rs713598',\n  association: [\n    { genotype: 'C/C', phenotype: 'Possibly does not taste PTC as bitter' },\n    { genotype: 'C/G', phenotype: 'Can taste PTC as bitter' },\n    { genotype: 'G/G', phenotype: 'Can taste PTC as bitter' },\n  ],\n};\n*/\n\nSingleVariantTrait.propTypes = {\n  settings: settingsPropType.isRequired,\n  source: PropTypes.instanceOf(VCFSource).isRequired,\n  trait: PropTypes.shape({\n    title: PropTypes.string,\n    variant: variantPropType,\n    rsId: PropTypes.string,\n    association: PropTypes.arrayOf(\n      PropTypes.shape({\n        genotype: PropTypes.string, // allele/allele (with reference allele first), e.g. C/T\n        phenotype: PropTypes.string\n      })\n    )\n  }).isRequired,\n  children: PropTypes.node.isRequired\n};\n\nexport default withSourceAndSettings(SingleVariantTrait);\n","import styled from 'styled-components';\n\nexport const MonoSpan = styled.span.attrs({\n  className: 'text-monospace'\n})``;\n","import React from 'react';\nimport SingleVariantTrait from '../analyses/SingleVariantTrait';\nimport { PubMed } from '../util/links';\nimport { MonoSpan } from '../util/style';\n\nconst earwax = {\n  title: 'Earwax Consistency',\n  variant: {\n    ctg: '16',\n    pos: 48258198,\n    pos_hg38: 48224287,\n    ref: 'C',\n    alt: 'T'\n  },\n  rsId: 'rs17822931',\n  association: [\n    { genotype: 'C/C', phenotype: 'Wet earwax' },\n    { genotype: 'C/T', phenotype: 'Wet earwax' },\n    { genotype: 'T/T', phenotype: 'Dry earwax' }\n  ]\n};\n\nexport default function EarwaxTrait() {\n  return (\n    <SingleVariantTrait trait={earwax}>\n      <p>\n        This <abbr title=\"Single Nucleotide Polymorphism\">SNP</abbr> in the{' '}\n        <i>ABCC11</i> gene determines human earwax consistency. The{' '}\n        <MonoSpan>TT</MonoSpan> genotype is associated with &ldquo;dry\n        earwax&rdquo;, while <MonoSpan>CC</MonoSpan> and <MonoSpan>CT</MonoSpan>{' '}\n        are associated with &ldquo;wet earwax&rdquo;. This SNP is also a proxy\n        for East Asian ancestry; the <MonoSpan>T</MonoSpan> allele is more\n        common in East Asian populations [<PubMed pubmedId={16444273} />\n        ].\n      </p>\n    </SingleVariantTrait>\n  );\n}\n","import React from 'react';\nimport SingleVariantTrait from '../analyses/SingleVariantTrait';\nimport { PubMed } from '../util/links';\n\nconst asparagus = {\n  title: 'Asparagus Asnomia',\n  variant: {\n    ctg: '1',\n    pos: 248496863,\n    pos_hg38: 248333561,\n    ref: 'A',\n    alt: 'G'\n  },\n  rsId: 'rs4481887',\n  association: [\n    {\n      genotype: 'A/A',\n      phenotype: 'Most likely to smell asparagus metabolites in urine'\n    },\n    {\n      genotype: 'A/G',\n      phenotype: 'More likely to smell asparagus metabolites in urine'\n    },\n    {\n      genotype: 'G/G',\n      phenotype: 'Least likely to smell asparagus metabolites in urine'\n    }\n  ]\n};\n\nexport default function AsparagusTrait() {\n  return (\n    <SingleVariantTrait trait={asparagus}>\n      <p>\n        This <abbr title=\"Single Nucleotide Polymorphism\">SNP</abbr> near the{' '}\n        <i>OR2M7</i> gene is associated with the ability to smell the\n        methanethiol produced after eating asparagus [\n        <PubMed pubmedId={20876394} />\n        ].\n      </p>\n    </SingleVariantTrait>\n  );\n}\n","import React from 'react';\nimport SingleVariantTrait from '../analyses/SingleVariantTrait';\nimport { PubMed } from '../util/links';\n\nconst bitter = {\n  title: 'Bitter Tasting (of PTC)',\n  variant: {\n    ctg: '7',\n    pos: 141673345,\n    pos_hg38: 141973545,\n    ref: 'C',\n    alt: 'G'\n  },\n  rsId: 'rs713598',\n  association: [\n    { genotype: 'C/C', phenotype: 'Possibly does not taste PTC as bitter' },\n    { genotype: 'C/G', phenotype: 'Can taste PTC as bitter' },\n    { genotype: 'G/G', phenotype: 'Can taste PTC as bitter' }\n  ]\n};\n\nexport default function BitterTastingTrait() {\n  return (\n    <SingleVariantTrait trait={bitter}>\n      <p>\n        This <abbr title=\"Single Nucleotide Polymorphism\">SNP</abbr> is one of\n        three variants comprising a halpotype in the <i>TAS2R38</i> gene\n        associated with the ability to taste the compound phenylthiocarbamide\n        (PTC) as bitter. A person who is a &ldquo;taster&rdquo; likely also\n        carries two other variants that make up the haplotype [\n        <PubMed pubmedId={12595690} />\n        ].\n      </p>\n    </SingleVariantTrait>\n  );\n}\n","import React from 'react';\nimport SingleVariantTrait from '../analyses/SingleVariantTrait';\nimport { PubMed, SNPedia } from '../util/links';\nimport { MonoSpan } from '../util/style';\n\nconst muscle = {\n  title: 'Muscle Performance',\n  variant: {\n    ctg: '11',\n    pos: 66328095,\n    pos_hg38: 66560624,\n    ref: 'T',\n    alt: 'C'\n  },\n  rsId: 'rs1815739',\n  association: [\n    { genotype: 'T/T', phenotype: 'Likely endurance athlete' },\n    { genotype: 'T/C', phenotype: 'Likely sprinter' },\n    { genotype: 'C/C', phenotype: 'Likely sprinter' }\n  ]\n};\n\nexport default function MuscleTrait() {\n  return (\n    <SingleVariantTrait trait={muscle}>\n      <p>\n        This <abbr title=\"Single Nucleotide Polymorphism\">SNP</abbr> in the{' '}\n        <i>ACTN3</i> gene has been associated with muscle performance in elite\n        athletes. The <MonoSpan>T</MonoSpan> allele (termed the &lsquo;X&rsquo;\n        allele) is reported to be underrepresented in elite endurance athletes [\n        <PubMed pubmedId={18043716} />\n        ]. Subsequent studies have not replicated the originally reported\n        association. Adapted from <SNPedia title=\"Rs1815739\" oldid={1536618} />.\n      </p>\n    </SingleVariantTrait>\n  );\n}\n","import React from 'react';\nimport SingleVariantTrait from '../analyses/SingleVariantTrait';\nimport { PubMed, SNPedia } from '../util/links';\nimport { MonoSpan } from '../util/style';\n\nconst eyecolor = {\n  title: 'Eye Color: Brown/Blue',\n  variant: {\n    ctg: '15',\n    pos: 28365618,\n    pos_hg38: 28120472,\n    ref: 'A',\n    alt: 'G'\n  },\n  rsId: 'rs12913832',\n  association: [\n    { genotype: 'A/A', phenotype: 'Brown eye color more likely (80%)' },\n    { genotype: 'A/G', phenotype: 'Brown eye color most likely' },\n    { genotype: 'G/G', phenotype: 'Blue eye color most likely (99%)' }\n  ]\n};\n\nexport default function EyeColorTraitBrown() {\n  return (\n    <SingleVariantTrait trait={eyecolor}>\n      <p>\n        This <abbr title=\"Single Nucleotide Polymorphism\">SNP</abbr>, upstream\n        of the <i>OCA2</i> gene, has been associated with eye color.\n        Specifically, blue eye color is associated with the{' '}\n        <MonoSpan>GG</MonoSpan> genotype. rs12913832 is part of a haplotype that\n        is found in almost all Caucasians with blue eyes. rs12913832 is common\n        in individuals of Caucasian descent, but rare in other groups [\n        <PubMed pubmedId={18172690} />\n        ], [<PubMed pubmedId={18252222} />\n        ]. Adapted from <SNPedia title=\"Rs12913832\" oldid={1533213} />.\n      </p>\n    </SingleVariantTrait>\n  );\n}\n","import React from 'react';\nimport SingleVariantTrait from '../analyses/SingleVariantTrait';\nimport { PubMed, SNPedia } from '../util/links';\nimport { MonoSpan } from '../util/style';\n\nconst eyecolor = {\n  title: 'Eye Color: Blue-Gray/Green',\n  variant: {\n    ctg: '15',\n    pos: 28344238,\n    pos_hg38: 28099092,\n    ref: 'A',\n    alt: 'G'\n  },\n  rsId: 'rs7495174',\n  association: [\n    { genotype: 'A/A', phenotype: 'Blue/gray eyes more likely' },\n    { genotype: 'A/G', phenotype: 'Blue/gray eyes less likely' },\n    { genotype: 'G/G', phenotype: 'Blue/gray eyes less likely' }\n  ]\n};\n\nexport default function EyeColorTraitGreen() {\n  return (\n    <SingleVariantTrait trait={eyecolor}>\n      <p>\n        This <abbr title=\"Single Nucleotide Polymorphism\">SNP</abbr> in the{' '}\n        <i>OCA2</i> gene has been associated with eye color. The{' '}\n        <MonoSpan>A</MonoSpan> allele often produces blue or green eye color in\n        Caucasians [\n        <PubMed pubmedId={17236130} />\n        ]. Adapted from <SNPedia title=\"Rs7495174\" oldid={1529684} />.\n      </p>\n    </SingleVariantTrait>\n  );\n}\n","import React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport AnalysisSelector from '../AnalysisSelector';\n\nimport EarwaxTrait from './EarwaxTrait';\nimport AsparagusTrait from './AsparagusTrait';\nimport BitterTastingTrait from './BitterTastingTrait';\nimport MuscleTrait from './MuscleTrait';\nimport EyeColorTraitBrown from './EyeColorTrait_Brown';\nimport EyeColorTraitGreen from './EyeColorTrait_Green';\n\n/*\nAdd a new trait by creating the corresponding component and adding it to the\nlist below. Each trait component contains the variant, genotype-phenotype mapping\nand a brief explanation of the trait.\n*/\n\nconst traits = [\n  {\n    title: 'Earwax Consistency',\n    route: '/traits/earwax',\n    component: EarwaxTrait\n  },\n  {\n    title: 'Asparagus Asnomia',\n    route: '/traits/asparagus',\n    component: AsparagusTrait\n  },\n  {\n    title: 'Bitter Tasting',\n    route: '/traits/bitter',\n    component: BitterTastingTrait\n  },\n  {\n    title: 'Muscle Performance',\n    route: '/traits/muscle',\n    component: MuscleTrait\n  },\n  {\n    title: 'Eye Color: Blue-Gray/Green',\n    route: '/traits/eyecolorgreen',\n    component: EyeColorTraitGreen\n  },\n  {\n    title: 'Eye Color: Brown/Blue',\n    route: '/traits/eyecolorbrown',\n    component: EyeColorTraitBrown\n  }\n];\n\nexport default function Traits(props) {\n  return (\n    <React.Fragment>\n      <AnalysisSelector\n        {...props}\n        analyses={traits}\n        category=\"Traits\"\n        categoryPath=\"/traits\"\n        dropdownText=\"Choose trait\"\n      />\n      <Route\n        path=\"/traits\"\n        exact\n        render={() => (\n          <div>\n            <p>Explore genomic analyses for the following physical traits:</p>\n            <ul>\n              {traits.map(trait => (\n                <li key={trait.route}>\n                  <Link to={trait.route}>{trait.title}</Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport SingleVariantTrait from '../analyses/SingleVariantTrait';\nimport { PubMed, PharmGKB } from '../util/links';\n\nconst simvastatin = {\n  title: 'Simvastatin',\n  variant: {\n    ctg: '12',\n    pos: 21331549,\n    pos_hg38: 21178615,\n    ref: 'T',\n    alt: 'C'\n  },\n  rsId: 'rs4149056',\n  association: [\n    {\n      genotype: 'T/T',\n      phenotype:\n        'Normal myopathy risk. CPIC Recommended Dosage: Prescribe desired starting dose and adjust doses of simvastatin based on disease-specific guidelines.'\n    },\n    {\n      genotype: 'T/C',\n      phenotype:\n        'Intermediate myopathy risk. CPIC Recommended Dosage: Prescribe a lower dose or consider an alternative statin (e.g., pravastatin or rosuvastatin); consider routine CK surveillance.'\n    },\n    {\n      genotype: 'C/C',\n      phenotype:\n        'High myopathy risk. CPIC Recommended Dosage: Prescribe a lower dose or consider an alternative statin (e.g., pravastatin or rosuvastatin); consider routine CK surveillance.'\n    }\n  ]\n};\n\nexport default function SimvastatinDrug() {\n  return (\n    <SingleVariantTrait trait={simvastatin}>\n      <p>\n        Simvastatin is among the most commonly used prescription medications for\n        cholesterol reduction. This{' '}\n        <abbr title=\"Single Nucleotide Polymorphism\">SNP</abbr> in the{' '}\n        <i>SLCO1B1</i> gene increases the risk of muscle toxicity, including\n        myopathy, in patients taking Simvastatin. Adapted from{' '}\n        <PharmGKB PAid=\"PA451363\" PAidGuide=\"PA166105005\" /> and the{' '}\n        <PubMed pubmedId={24918167}>CPIC Guidelines</PubMed>.\n      </p>\n    </SingleVariantTrait>\n  );\n}\n","/* eslint-disable import/prefer-default-export */\nconst flip = {\n  a: 't',\n  A: 'T',\n  c: 'g',\n  C: 'G',\n  g: 'c',\n  G: 'C',\n  t: 'a',\n  T: 'A'\n};\n\nexport function flipStrand(genotype) {\n  let flipped = '';\n  for (let i = 0; i < genotype.length; i += 1) {\n    const allele = genotype[i];\n    // TODO: Handle symbolic and other alleles\n    flipped += flip[allele] || allele;\n  }\n  return flipped;\n}\n","/* eslint-disable react/no-multi-comp */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Row, Col } from 'reactstrap';\nimport { VCFSource } from 'myseq-vcf';\nimport isEqual from 'lodash/isEqual';\nimport every from 'lodash/every';\nimport classNames from 'classnames';\nimport {\n  withSourceAndSettings,\n  settingsPropType\n} from '../../contexts/context-helpers';\nimport SettingsAlert from '../analyses/SettingsAlert';\nimport ReferenceAlert from '../analyses/ReferenceAlert';\nimport { PharmGKB, PubMed, ExternalLink } from '../util/links';\nimport { flipStrand } from '../util/alleles';\nimport { refAwareVariantQuery } from '../util/query';\n\nconst warfarinFDA = {\n  title: 'Warfarin FDA Label',\n  variants: [\n    {\n      ctg: '16',\n      pos: 31107689,\n      pos_hg38: 3109636,\n      ref: 'C',\n      alt: 'T',\n      flip: true\n    }, // VKORC1 (flip to be consistent with external tables, etc.)\n    {\n      ctg: '10',\n      pos: 96702047,\n      pos_hg38: 94942290,\n      ref: 'C',\n      alt: 'T'\n    }, // CYP2C9 *2\n    {\n      ctg: '10',\n      pos: 96741053,\n      pos_hg38: 94981296,\n      ref: 'A',\n      alt: 'C'\n    } // CYP2C9 *3\n  ],\n  rsId: ['rs9923231', 'rs1799853', 'rs1057910'],\n  starName: [\n    'CYP2C9 *1/*1',\n    'CYP2C9 *1/*2',\n    'CYP2C9 *1/*3',\n    'CYP2C9 *2/*2',\n    'CYP2C9 *2/*3',\n    'CYP2C9 *3/*3'\n  ],\n  association: [\n    {\n      vkorcGenotype: 'G/G',\n      cyp2c9Genotype: [\n        ['C/C', 'A/A'],\n        ['C/T', 'A/A'],\n        ['C/C', 'A/C'],\n        ['T/T', 'A/A'],\n        ['C/T', 'A/C'],\n        ['C/C', 'C/C']\n      ],\n      phenotype: ['5-7', '5-7', '3-4', '3-4', '3-4', '0.5-2']\n    },\n    {\n      vkorcGenotype: 'G/A',\n      cyp2c9Genotype: [\n        ['C/C', 'A/A'],\n        ['C/T', 'A/A'],\n        ['C/C', 'A/C'],\n        ['T/T', 'A/A'],\n        ['C/T', 'A/C'],\n        ['C/C', 'C/C']\n      ],\n      phenotype: ['5-7', '3-4', '3-4', '3-4', '0.5-2', '0.5-2']\n    },\n    {\n      vkorcGenotype: 'A/A',\n      cyp2c9Genotype: [\n        ['C/C', 'A/A'],\n        ['C/T', 'A/A'],\n        ['C/C', 'A/C'],\n        ['T/T', 'A/A'],\n        ['C/T', 'A/C'],\n        ['C/C', 'C/C']\n      ],\n      phenotype: ['3-4', '3-4', '0.5-2', '0.5-2', '0.5-2', '0.5-2']\n    }\n  ]\n};\n\nconst warfarinAlg = {\n  title: 'Warfarin Dosing Algorithm',\n  variants: [\n    {\n      ctg: '16',\n      pos: 31107689,\n      pos_hg38: 31096368,\n      ref: 'C',\n      alt: 'T',\n      flip: true\n    }, // VKORC1 (flip to be consistent with external tables, etc.)\n    {\n      ctg: '19',\n      pos: 15990431,\n      pos_hg38: 15879621,\n      ref: 'C',\n      alt: 'T'\n    }, // CYP4F2\n    {\n      ctg: '2',\n      pos: 85777633,\n      pos_hg38: 85550510,\n      ref: 'C',\n      alt: 'G'\n    }, // GGCX\n    {\n      ctg: '10',\n      pos: 96702047,\n      pos_hg38: 94942290,\n      ref: 'C',\n      alt: 'T'\n    }, // CYP2C9 *2\n    {\n      ctg: '10',\n      pos: 96741053,\n      pos_hg38: 94981296,\n      ref: 'A',\n      alt: 'C'\n    }, // CYP2C9 *3\n    {\n      ctg: '10',\n      pos: 96741058,\n      pos_hg38: 94981301,\n      ref: 'C',\n      alt: 'G'\n    }, // CYP2C9 *5\n    {\n      ctg: '10',\n      pos: 96709038,\n      pos_hg38: 94949281,\n      ref: 'GA',\n      alt: 'G'\n    } // CYP2C9 *6\n  ],\n  rsId: [\n    'rs9923231',\n    'rs2108622',\n    ' rs11676382',\n    'rs1799853',\n    'rs1057910',\n    'rs28371686',\n    'rs9332131'\n  ],\n  name: [\n    'VKORC1-1639/3673',\n    'CYP4F2',\n    'GGCX',\n    'CYP2C9 *2',\n    'CYP2C9 *3',\n    'CYP2C9 *5',\n    'CYP2C9 *6'\n  ]\n};\n\nclass WarfarinFDA extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      genotypes: []\n    };\n  }\n\n  componentDidMount() {\n    const { sample, assumeRefRef } = this.props.settings;\n    const queries = warfarinFDA.variants;\n\n    Promise.all(\n      queries.map(query =>\n        refAwareVariantQuery(this.props.source, query, assumeRefRef)\n      )\n    )\n      .then(variants => {\n        this.setState({\n          genotypes: variants.map((variant, idx) => {\n            if (!variant) {\n              return undefined;\n            }\n            const genotype = variant.genotype(sample);\n            return queries[idx].flip ? flipStrand(genotype) : genotype;\n          })\n        });\n\n        if (!assumeRefRef && !every(variants)) {\n          this.props.missingGenotype();\n        }\n      })\n      .catch(() => {\n        // TODO: Differentiate error types\n        this.props.referenceError();\n      });\n  }\n\n  render() {\n    return (\n      <Table bordered size=\"sm\">\n        <thead>\n          <tr>\n            <th>VKORC1-1639</th>\n            {warfarinFDA.starName.map(name => (\n              <th key={name}>{name}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {warfarinFDA.association.map(assoc => {\n            const genotypes = assoc.cyp2c9Genotype.map(cyp2c9Genotype =>\n              [assoc.vkorcGenotype].concat(cyp2c9Genotype)\n            );\n            return (\n              <tr key={assoc.vkorcGenotype}>\n                <td>{assoc.vkorcGenotype}</td>\n                {assoc.phenotype.map((phenotype, index) => (\n                  <td\n                    key={`${assoc.vkorcGenotype}-${\n                      warfarinFDA.starName[index]\n                    }`}\n                    className={classNames({\n                      'table-primary': isEqual(\n                        genotypes[index],\n                        this.state.genotypes\n                      )\n                    })}\n                  >\n                    {phenotype}\n                  </td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nWarfarinFDA.propTypes = {\n  settings: settingsPropType.isRequired,\n  source: PropTypes.instanceOf(VCFSource).isRequired,\n  missingGenotype: PropTypes.func.isRequired,\n  referenceError: PropTypes.func.isRequired\n};\n\nclass WarfarinAlg extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      genotypes: []\n    };\n  }\n\n  componentDidMount() {\n    const { sample, assumeRefRef } = this.props.settings;\n    const queries = warfarinAlg.variants;\n\n    Promise.all(\n      queries.map(query =>\n        refAwareVariantQuery(this.props.source, query, assumeRefRef)\n      )\n    )\n      .then(variants => {\n        this.setState({\n          genotypes: variants.map((variant, idx) => {\n            if (!variant) {\n              return undefined;\n            }\n            const genotype = variant.genotype(sample);\n            return queries[idx].flip ? flipStrand(genotype) : genotype;\n          })\n        });\n\n        if (!assumeRefRef && !every(variants)) {\n          this.props.missingGenotype();\n        }\n      })\n      .catch(() => {\n        // TODO: Differentiate error types\n        this.props.referenceError();\n      });\n  }\n\n  render() {\n    return (\n      <Table bordered size=\"sm\">\n        <thead>\n          <tr>\n            <th>Variant</th>\n            <th>Genotype</th>\n          </tr>\n        </thead>\n        <tbody>\n          {warfarinAlg.name.map((name, index) => (\n            <tr key={name}>\n              <td>{name}</td>\n              <td>{this.state.genotypes[index]}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nWarfarinAlg.propTypes = {\n  settings: settingsPropType.isRequired,\n  source: PropTypes.instanceOf(VCFSource).isRequired,\n  missingGenotype: PropTypes.func.isRequired,\n  referenceError: PropTypes.func.isRequired\n};\n\nclass WarfarinDrug extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showSettingsAlert: false,\n      showReferenceAlert: false\n    };\n\n    this.handleMissingGenotype = this.handleMissingGenotype.bind(this);\n    this.handleReferenceError = this.handleReferenceError.bind(this);\n  }\n\n  handleMissingGenotype() {\n    this.setState({ showSettingsAlert: true });\n  }\n\n  handleReferenceError() {\n    this.setState({ showReferenceAlert: true });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Warfarin</h3>\n        <ReferenceAlert isOpen={this.state.showReferenceAlert} />\n        <SettingsAlert\n          isOpen={\n            this.state.showSettingsAlert && !this.props.settings.assumeRefRef\n          }\n          toggle={() => this.setState({ showSettingsAlert: false })}\n        />\n        <p>\n          Warfarin is a widely used anticoagulant therapy with a narrow\n          therapeutic range and large variability in the dose required for a\n          patient to achieve the target anticoagulation. The{' '}\n          <PubMed pubmedId={28198005}>CPIC Guidelines</PubMed> provides a\n          multi-tier set of guidelines (implemented as a decision-tree). These\n          analyses reproduce the dosage table from the FDA label and extract the\n          genotypes needed by the{' '}\n          <ExternalLink href=\"http://warfarindosing.org\">\n            WarfarinDosing.org\n          </ExternalLink>{' '}\n          genetics-based dosing algorithm.\n        </p>\n        <h4>Warfarin FDA Label</h4>\n        <Row>\n          <Col md={8}>\n            <WarfarinFDA\n              source={this.props.source}\n              settings={this.props.settings}\n              missingGenotype={this.handleMissingGenotype}\n              referenceError={this.handleReferenceError}\n            />\n          </Col>\n          <Col md={4}>\n            <p>\n              FDA suggested daily Warfarin dosage (in mg/day) in order to\n              achieve an optimal therapeutic effect. Adapted from{' '}\n              <PharmGKB PAid=\"PA451906\" PAidGuide=\"PA166104949\" />.\n            </p>\n          </Col>\n        </Row>\n        <h4>Warfarin Dosing Algorithm</h4>\n        <Row>\n          <Col md={6}>\n            <WarfarinAlg\n              source={this.props.source}\n              settings={this.props.settings}\n              missingGenotype={this.handleMissingGenotype}\n              referenceError={this.handleReferenceError}\n            />\n          </Col>\n          <Col md={6}>\n            <p>\n              These genotypes, along with other clinical variables, are utilized\n              by the{' '}\n              <ExternalLink href=\"http://warfarindosing.org\">\n                WarfarinDosing.org\n              </ExternalLink>{' '}\n              dosing algorithm.\n            </p>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nWarfarinDrug.propTypes = {\n  settings: settingsPropType.isRequired,\n  source: PropTypes.instanceOf(VCFSource).isRequired\n};\n\nexport default withSourceAndSettings(WarfarinDrug);\n","import React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { ExternalLink } from '../util/links';\nimport AnalysisSelector from '../AnalysisSelector';\n\nimport SimvastatinDrug from './SimvastatinDrug';\nimport WarfarinDrug from './WarfarinDrug';\n\n/*\nAdd a new drug by creating the corresponding component and adding it to the\nlist below.\n*/\n\nconst drugs = [\n  {\n    title: 'Simvastatin',\n    route: '/pgx/simvastatin',\n    component: SimvastatinDrug\n  },\n  { title: 'Warfarin', route: '/pgx/warfarin', component: WarfarinDrug }\n];\n\nexport default function PGx(props) {\n  return (\n    <React.Fragment>\n      <AnalysisSelector\n        {...props}\n        analyses={drugs}\n        category=\"Pharmacogenomics\"\n        categoryPath=\"/pgx\"\n        dropdownText=\"Choose drug\"\n      />\n      <Route\n        path=\"/pgx\"\n        exact\n        render={() => (\n          <div>\n            <p>\n              Explore genomic analyses for drug safety and efficacy for the\n              following drugs:\n            </p>\n            <ul>\n              {drugs.map(drug => (\n                <li key={drug.route}>\n                  <Link to={drug.route}>{drug.title}</Link>\n                </li>\n              ))}\n            </ul>\n            <p>\n              The gene-drug relationships and associated clinical guidelines are\n              sourced from{' '}\n              <ExternalLink href=\"https://www.pharmgkb.org\">\n                PharmGKB\n              </ExternalLink>{' '}\n              and the{' '}\n              <ExternalLink href=\"https://cpicpgx.org/guidelines/\">\n                CPIC guidlines\n              </ExternalLink>\n              .\n            </p>\n          </div>\n        )}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Table,\n  Row,\n  Col,\n  Card,\n  CardText,\n  CardHeader,\n  CardBody\n} from 'reactstrap';\nimport { VCFSource } from 'myseq-vcf';\nimport every from 'lodash/every';\nimport range from 'lodash/range';\nimport {\n  withSourceAndSettings,\n  settingsPropType\n} from '../../contexts/context-helpers';\nimport SettingsAlert from './SettingsAlert';\nimport ReferenceAlert from './ReferenceAlert';\nimport { DbSnp, PubMed } from '../util/links';\nimport { refAwareVariantQuery, variantPropType } from '../util/query';\n\n// https://fontawesome.com/license/free\n// Creative Commons Attribution 4.0 International license\n\nfunction HundredPersonFigure(props) {\n  const maxColorIdx = props.count;\n  return (\n    <svg width=\"140px\" height=\"240px\">\n      <defs>\n        <g id=\"Outline\" transform=\"scale(0.0390625)\">\n          <path d=\"M96 0c35.346 0 64 28.654 64 64s-28.654 64-64 64-64-28.654-64-64S60.654 0 96 0m48 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H48c-26.51 0-48 21.49-48 48v136c0 13.255 10.745 24 24 24h16v136c0 13.255 10.745 24 24 24h64c13.255 0 24-10.745 24-24V352h16c13.255 0 24-10.745 24-24V192c0-26.51-21.49-48-48-48z\" />\n        </g>\n      </defs>\n      {range(100).map(idx => {\n        const row = 9 - Math.floor(idx / 10);\n        const col = idx % 10;\n        return (\n          <use\n            key={idx}\n            xlinkHref=\"#Outline\"\n            x={col * 14}\n            y={row * 24}\n            style={{ fill: idx < maxColorIdx ? props.color : 'grey' }}\n          />\n        );\n      })}\n    </svg>\n  );\n}\n\nHundredPersonFigure.propTypes = {\n  count: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nfunction RiskCard(props) {\n  const count = Math.round(props.risk * 100);\n  return (\n    <Col md={3}>\n      <Card className=\"text-center\">\n        <CardHeader tag=\"h5\">{props.title}</CardHeader>\n        <CardBody>\n          <HundredPersonFigure count={count} color={props.color} />\n          <CardText className=\"text-left\">\n            {count} of 100 (\n            <span className=\"risk-pct\">\n              {props.risk.toLocaleString(undefined, {\n                style: 'percent',\n                maximumFractionDigits: 1\n              })}\n            </span>\n            ) people {props.modifier} will develop {props.disease} in their\n            lifetime\n          </CardText>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n}\n\nRiskCard.propTypes = {\n  risk: PropTypes.number.isRequired,\n  title: PropTypes.node.isRequired,\n  modifier: PropTypes.node,\n  disease: PropTypes.string.isRequired,\n  color: PropTypes.string\n};\n\nRiskCard.defaultProps = {\n  modifier: null,\n  color: 'blue'\n};\n\nclass LRRiskModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showSettingsAlert: false,\n      showReferenceAlert: false,\n      preTestRisk: props.preTestRisk,\n      cumulativeLR: 1.0,\n      riskVariants: []\n    };\n  }\n\n  componentDidMount() {\n    const { sample, assumeRefRef } = this.props.settings;\n    Promise.all(\n      this.props.riskVariants.map(riskVariant => {\n        const { variant: query, rsId } = riskVariant;\n        return refAwareVariantQuery(\n          this.props.source,\n          query,\n          assumeRefRef\n        ).then(variant => {\n          if (!variant) {\n            return {\n              label: `${query.ctg}:${query.pos}${query.ref}>${query.alt}`,\n              rsId,\n              genotype: undefined,\n              LR: undefined\n            };\n          }\n\n          const genotype = variant.genotype(sample);\n          return {\n            label: variant.toString(),\n            rsId,\n            genotype,\n            LR: riskVariant.LR[genotype]\n          };\n        });\n      })\n    )\n      .then(riskVariants => {\n        // Compute cumulative LR and update the risk fields\n        let cumulativeLR = 1.0;\n        riskVariants.forEach(riskVariant => {\n          const { LR } = riskVariant;\n          if (LR) {\n            cumulativeLR *= LR;\n          }\n        });\n        this.setState({ cumulativeLR, riskVariants });\n\n        // Show RefRef notice if missing entries\n        if (\n          !assumeRefRef &&\n          !every(riskVariants.map(variant => variant.genotype))\n        ) {\n          this.setState({ showSettingsAlert: true });\n        }\n      })\n      .catch(() => {\n        // TODO: Differentiate error types\n        this.setState({ showReferenceAlert: true });\n      });\n  }\n\n  render() {\n    const { settings, title, children } = this.props;\n    const {\n      preTestRisk,\n      cumulativeLR,\n      riskVariants,\n      showSettingsAlert,\n      showReferenceAlert\n    } = this.state;\n\n    const preTestOdds = preTestRisk / (1 - preTestRisk);\n    const postTestOdds = preTestOdds * cumulativeLR;\n    const postTestRisk = postTestOdds / (1 + postTestOdds);\n\n    // TODO: Support form for changing pre-test risk\n    // TODO: Add link to source paper (other information)\n\n    return (\n      <div>\n        <h3>{title}</h3>\n        <ReferenceAlert isOpen={showReferenceAlert} />\n        <SettingsAlert\n          isOpen={showSettingsAlert && !settings.assumeRefRef}\n          toggle={() => this.setState({ showSettingsAlert: false })}\n        />\n        <Row className=\"mb-3\">\n          <RiskCard risk={preTestRisk} title=\"Average Risk\" disease={title} />\n          <RiskCard\n            risk={postTestRisk}\n            title=\"Risk with Genome\"\n            disease={title}\n            modifier=\"with the same genetic makeup\"\n            color=\"limegreen\"\n          />\n          <Col md={6}>\n            <Table bordered size=\"sm\">\n              <thead>\n                <tr>\n                  <th>Variant</th>\n                  <th>Genotype</th>\n                  <th>LR</th>\n                </tr>\n              </thead>\n              <tbody>\n                {riskVariants.map(variant => (\n                  <tr key={variant.label}>\n                    <td>\n                      <DbSnp rsId={variant.rsId} />\n                    </td>\n                    <td>{variant.genotype}</td>\n                    <td>{variant.LR && variant.LR.toLocaleString(3)}</td>\n                  </tr>\n                ))}\n                <tr>\n                  <td>\n                    <strong>Total</strong>\n                  </td>\n                  <td />\n                  <td>\n                    <strong>{cumulativeLR.toLocaleString(3)}</strong>\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n        <Row>\n          <Col>{children}</Col>\n        </Row>\n        <Row>\n          <Col>\n            This analysis, modeled on <PubMed pubmedId=\"20435227\" />, is\n            intended to demonstrate the use of a{' '}\n            <PubMed pubmedId=\"20497613\">likelihood ratio-based approach</PubMed>{' '}\n            to predict an individual's genetically-informed risk of developing\n            disease. A total likelihood ratio (LR) of greater than 1 implies\n            that an individual with the same genetic makeup is at increased risk\n            compared the average person. The overall LR is the product the LRs\n            of the individual variants. The LR for a variant is computed from\n            the odds ratio reported in the GWAS study. This analysis may or may\n            not accurately model an individual's actual risk of developing this\n            condition. Only a small fraction of the variants that have been\n            reported to be associated with this condition are included in the\n            model; relevant risk or protective variants may not be included and\n            the genetic variants that are included may or may not confer risk in\n            a particular individual. This model does not incorporate any\n            specific information about the individual, such as ancestry or\n            environment (including lifestyle).\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nLRRiskModel.propTypes = {\n  settings: settingsPropType.isRequired,\n  source: PropTypes.instanceOf(VCFSource).isRequired,\n  title: PropTypes.string.isRequired,\n  preTestRisk: PropTypes.number.isRequired,\n  riskVariants: PropTypes.arrayOf(\n    PropTypes.shape({\n      variant: variantPropType,\n      rsId: PropTypes.string,\n      LR: PropTypes.object\n    })\n  ).isRequired,\n  children: PropTypes.node.isRequired\n};\n\nexport { LRRiskModel as LRRiskModelImpl };\nexport default withSourceAndSettings(LRRiskModel);\n","/* eslint-disable max-len */\nimport React from 'react';\nimport LRRiskModel from '../analyses/LRRiskModel';\nimport { PubMed } from '../util/links';\n\nconst t2d = [\n  {\n    variant: {\n      ctg: '4',\n      pos: 6292915,\n      pos_hg38: 6291188,\n      ref: 'A',\n      alt: 'G'\n    },\n    rsId: 'rs10010131',\n    LR: { 'A/A': 1.134, 'A/G': 1.013, 'G/G': 0.904 }\n  },\n  {\n    variant: {\n      ctg: '9',\n      pos: 22134094,\n      pos_hg38: 22134095,\n      ref: 'T',\n      alt: 'C'\n    },\n    rsId: 'rs10811661',\n    LR: { 'T/T': 1.059, 'T/C': 0.883, 'C/C': 0.736 }\n  },\n  {\n    variant: {\n      ctg: '10',\n      pos: 94462882,\n      pos_hg38: 92703125,\n      ref: 'C',\n      alt: 'T'\n    },\n    rsId: 'rs1111875',\n    LR: { 'C/C': 1.118, 'C/T': 0.989, 'T/T': 0.875 }\n  },\n  {\n    variant: {\n      ctg: '8',\n      pos: 118184783,\n      pos_hg38: 117172544,\n      ref: 'C',\n      alt: 'T'\n    },\n    rsId: 'rs13266634',\n    LR: { 'C/C': 1.079, 'C/T': 0.964, 'T/T': 0.861 }\n  },\n  {\n    variant: {\n      ctg: '11',\n      pos: 92673828,\n      pos_hg38: 92940662,\n      ref: 'C',\n      alt: 'T'\n    },\n    rsId: 'rs1387153',\n    LR: { 'C/C': 0.951, 'C/T': 1.037, 'T/T': 1.13 }\n  },\n  {\n    variant: {\n      ctg: '3',\n      pos: 12393125,\n      pos_hg38: 12351626,\n      ref: 'C',\n      alt: 'G'\n    },\n    rsId: 'rs1801282',\n    LR: { 'C/C': 1.024, 'C/G': 0.939, 'G/G': 0.861 }\n  },\n  {\n    variant: {\n      ctg: '3',\n      pos: 185511687,\n      pos_hg38: 185793899,\n      ref: 'G',\n      alt: 'T'\n    },\n    rsId: 'rs4402960',\n    LR: { 'G/G': 0.923, 'G/T': 1.053, 'T/T': 1.2 }\n  },\n  {\n    variant: {\n      ctg: '10',\n      pos: 114758349,\n      pos_hg38: 112998590,\n      ref: 'C',\n      alt: 'T'\n    },\n    rsId: 'rs7903146',\n    LR: { 'C/C': 0.8, 'C/T': 1.088, 'T/T': 1.504 }\n  },\n  {\n    variant: {\n      ctg: '11',\n      pos: 17409572,\n      pos_hg38: 17388025,\n      ref: 'T',\n      alt: 'C'\n    },\n    rsId: 'rs5219',\n    LR: { 'T/T': 1.154, 'T/C': 1.004, 'C/C': 0.873 }\n  },\n  {\n    variant: {\n      ctg: '6',\n      pos: 20661250,\n      pos_hg38: 20661019,\n      ref: 'G',\n      alt: 'C'\n    },\n    rsId: 'rs7754840',\n    LR: { 'G/G': 0.93, 'G/C': 1.041, 'C/C': 1.166 }\n  },\n  {\n    variant: {\n      ctg: '6',\n      pos: 20679709,\n      pos_hg38: 20679478,\n      ref: 'A',\n      alt: 'G'\n    },\n    rsId: 'rs7756992',\n    LR: { 'A/A': 0.904, 'A/G': 1.085, 'G/G': 1.302 }\n  },\n  {\n    variant: {\n      ctg: '6',\n      pos: 20717255,\n      pos_hg38: 20717024,\n      ref: 'T',\n      alt: 'C'\n    },\n    rsId: 'rs9465871',\n    LR: { 'T/T': 0.918, 'T/C': 1.083, 'C/C': 1.991 }\n  },\n  {\n    variant: {\n      ctg: '16',\n      pos: 53820527,\n      pos_hg38: 53786615,\n      ref: 'T',\n      alt: 'A'\n    },\n    rsId: 'rs9939609',\n    LR: { 'T/T': 0.8, 'T/A': 1.072, 'A/A': 1.24 }\n  }\n];\n\nexport default function Type2DiabetesRisk() {\n  return (\n    <LRRiskModel title=\"Type 2 Diabetes\" preTestRisk={0.345} riskVariants={t2d}>\n      <p>\n        Type 2 diabetes mellitus is the most common type of diabetes, with an\n        overall prevalence in the population in the tens of percent. Pre-test,\n        or population average risk, is computed from the overall lifetime risks\n        for Type 2 Diabetes for different demographic groups reported in [\n        <PubMed pubmedId={14532317} />\n        ]. The risk variants are curated from previously reported genetic risk\n        predictors [<PubMed pubmedId={24618965} />,{' '}\n        <PubMed pubmedId={24520119} />, <PubMed pubmedId={19020323} />] and\n        replicated GWAS findings.\n      </p>\n    </LRRiskModel>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Row, Col } from 'reactstrap';\nimport { VCFSource } from 'myseq-vcf';\nimport isEqual from 'lodash/isEqual';\nimport every from 'lodash/every';\nimport {\n  withSourceAndSettings,\n  settingsPropType\n} from '../../contexts/context-helpers';\nimport SettingsAlert from './SettingsAlert';\nimport ReferenceAlert from './ReferenceAlert';\nimport { DbSnp } from '../util/links';\nimport { refAwareVariantQuery, variantPropType } from '../util/query';\n\nclass MultiVariantTrait extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      genotypes: [],\n      showSettingsAlert: false,\n      showReferenceAlert: false\n    };\n  }\n\n  componentDidMount() {\n    const { sample, assumeRefRef } = this.props.settings;\n    const queries = this.props.trait.variants;\n\n    Promise.all(\n      queries.map(query =>\n        refAwareVariantQuery(this.props.source, query, assumeRefRef)\n      )\n    )\n      .then(variants => {\n        this.setState({\n          genotypes: variants.map(variant => {\n            return variant ? variant.genotype(sample) : undefined;\n          })\n        });\n\n        if (!assumeRefRef && !every(variants)) {\n          this.setState({ showSettingsAlert: true });\n        }\n      })\n      .catch(() => {\n        // TODO: Differentiate error types\n        this.setState({ showReferenceAlert: true });\n      });\n  }\n\n  render() {\n    const { settings, trait, children } = this.props;\n    const { showSettingsAlert, showReferenceAlert } = this.state;\n    return (\n      <div>\n        <h3>{trait.title}</h3>\n        <ReferenceAlert isOpen={showReferenceAlert} />\n        <SettingsAlert\n          isOpen={showSettingsAlert && !settings.assumeRefRef}\n          toggle={() => this.setState({ showSettingsAlert: false })}\n        />\n        <Row>\n          <Col md={6}>\n            <Table bordered>\n              <thead>\n                <tr>\n                  {trait.rsId.map(rsId => (\n                    <th key={rsId}>\n                      <DbSnp rsId={rsId} />\n                    </th>\n                  ))}\n                  <th>Phenotype</th>\n                </tr>\n              </thead>\n              <tbody>\n                {trait.association.map(assoc => (\n                  <tr\n                    key={assoc.genotypes}\n                    className={\n                      isEqual(this.state.genotypes, assoc.genotypes)\n                        ? 'table-primary'\n                        : undefined\n                    }\n                  >\n                    {assoc.genotypes.map((genotype, index) => (\n                      <td key={`${trait.rsId[index]}: ${genotype}`}>\n                        {genotype}\n                      </td>\n                    ))}\n                    <td>{assoc.phenotype}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Col>\n          <Col md={6}>{children}</Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nMultiVariantTrait.propTypes = {\n  settings: settingsPropType.isRequired,\n  source: PropTypes.instanceOf(VCFSource).isRequired,\n  trait: PropTypes.shape({\n    title: PropTypes.string,\n    variants: PropTypes.arrayOf(variantPropType),\n    rsId: PropTypes.arrayOf(PropTypes.string),\n    association: PropTypes.arrayOf(\n      PropTypes.shape({\n        genotypes: PropTypes.arrayOf(String), // allele/allele (with reference allele first), e.g. C/T\n        phenotype: PropTypes.string\n      })\n    )\n  }).isRequired,\n  children: PropTypes.node.isRequired\n};\n\nexport default withSourceAndSettings(MultiVariantTrait);\n","import React from 'react';\nimport styled from 'styled-components';\nimport MultiVariantTrait from '../analyses/MultiVariantTrait';\nimport { SNPedia, ExternalLink } from '../util/links';\n\nconst MonoSpan = styled.span.attrs({\n  className: 'text-monospace'\n})``;\n\nconst alzheimer = {\n  title: \"Alzheimer's Disease\",\n  variants: [\n    {\n      ctg: '19',\n      pos: 45411941,\n      pos_hg38: 44908684,\n      ref: 'T',\n      alt: 'C'\n    },\n    {\n      ctg: '19',\n      pos: 45412079,\n      pos_hg38: 44908822,\n      ref: 'C',\n      alt: 'T'\n    }\n  ],\n  rsId: ['rs429358', 'rs7412'],\n  association: [\n    { genotypes: ['T/T', 'C/C'], phenotype: 'ε3/ε3: No change in risk' },\n    { genotypes: ['T/T', 'C/T'], phenotype: 'ε3/ε2: No change in risk' },\n    { genotypes: ['T/T', 'T/T'], phenotype: 'ε2/ε2: No change in risk' },\n    { genotypes: ['T/C', 'C/C'], phenotype: 'ε3/ε4: 2-fold increased risk' },\n    { genotypes: ['T/C', 'C/T'], phenotype: 'ε2/ε4: 2-fold increased risk' },\n    { genotypes: ['T/C', 'T/T'], phenotype: 'Insufficient information' },\n    { genotypes: ['C/C', 'C/C'], phenotype: 'ε4/ε4: 11-fold increased risk' },\n    { genotypes: ['C/C', 'C/T'], phenotype: 'Insufficient information' },\n    { genotypes: ['C/C', 'T/T'], phenotype: 'Insufficient information' }\n  ]\n};\n\nexport default function AlzheimersRisk() {\n  return (\n    <MultiVariantTrait trait={alzheimer}>\n      <p>\n        These <abbr title=\"Single Nucleotide Polymorphism\">SNPs</abbr> in the{' '}\n        <i>APOE</i> gene have been associated with increased risk of late-onset\n        Alzheimer&apos;s Disease. Alzheimer&apos;s disease is a progressive,\n        degenerative disorder that attacks the brain&apos;s nerve cells, or\n        neurons, resulting in loss of memory, thinking and language skills, and\n        behavioral changes. One or more copies of the ε4 allele is associated\n        with increased risk of developing Alzheimer&apos;s Disease. The ε2\n        allele is rare and may have protective effects. However as described in{' '}\n        <ExternalLink href=\"https://www.ncbi.nlm.nih.gov/books/NBK1161/\">\n          GeneReviews\n        </ExternalLink>{' '}\n        the ε4 allele is \"not sufficient to cause disease\" and \"while{' '}\n        <i>APOE</i> genotyping may have an adjunct role in the diagnosis of\n        [Alzheimer&apos;s Disease] in symptomatic individuals, it appears to\n        have little role at this time in predictive testing of asymptomatic\n        individuals\". The ε2, ε3, and ε4 alleles are determined by the\n        combination of these two variants on the same chromosome. Since the{' '}\n        <MonoSpan>rs429358(C)</MonoSpan> + <MonoSpan>rs7412(T)</MonoSpan>{' '}\n        haplotype is extremely rare, individuals with <MonoSpan>C/T</MonoSpan>{' '}\n        genotypes at both SNPs are assumed to be ε2/ε4. Adapted from{' '}\n        <SNPedia title=\"APOE-ε4\" oldid={1536640} />.\n      </p>\n    </MultiVariantTrait>\n  );\n}\n","import React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { PubMed } from '../util/links';\nimport AnalysisSelector from '../AnalysisSelector';\n\nimport Type2DiabetesRisk from './Type2DiabetesRisk';\nimport AlzheimersRisk from './AlzheimersRisk';\n\n/*\nAdd a new disease by creating the corresponding component and adding it to the\nlist below.\n*/\n\nconst risks = [\n  {\n    title: 'Type 2 Diabetes',\n    route: '/risks/t2d',\n    component: Type2DiabetesRisk\n  },\n  {\n    title: \"Alzheimer's Disease\",\n    route: '/risks/alzheimers',\n    component: AlzheimersRisk\n  }\n];\n\nexport default function Risks(props) {\n  return (\n    <React.Fragment>\n      <AnalysisSelector\n        {...props}\n        analyses={risks}\n        category=\"Disease Risk\"\n        categoryPath=\"/risks\"\n        dropdownText=\"Choose disease\"\n      />\n      <Route\n        path=\"/risks\"\n        exact\n        render={() => (\n          <div>\n            <p>\n              Explore genomic analyses for the risk of developing the following\n              diseases:\n            </p>\n            <ul>\n              {risks.map(risk => (\n                <li key={risk.route}>\n                  <Link to={risk.route}>{risk.title}</Link>\n                </li>\n              ))}\n            </ul>\n            <p>\n              These analyses employ multiple methods including polygenic risk\n              prediction using{' '}\n              <PubMed pubmedId=\"20497613\">likelihood ratios</PubMed> and\n              genotype-phenotype lookup.\n            </p>\n          </div>\n        )}\n      />\n    </React.Fragment>\n  );\n}\n","/* eslint-disable no-unused-vars */\n/* Hulls for PCA components for POPRES datasets using PCA loadings computed from AIMs in Drineas et al. */\nconst EuropeanCourseHull = [\n  { x: 3.914939, y: 2.138966 },\n  // { // outlier\n  //   x: 2.507552, y: 5.697582,\n  // },\n  { x: -3.017748, y: 3.426239 },\n  { x: -3.80582, y: 2.89069 },\n  { x: -5.645789, y: 0.806481 },\n  { x: -5.864868, y: -2.668472 },\n  { x: -4.33224, y: -3.743894 },\n  { x: -2.962506, y: -4.525817 },\n  { x: -0.689538, y: -4.395281 },\n  // { // outlier\n  //   x: -0.154069, y: 4.104127,\n  // },\n  { x: 2.99492, y: -1.918013 }\n];\n\nconst AfAmCourseHull = [\n  {\n    x: -1.033673,\n    y: 0.646794\n  },\n  // { // outlier\n  //   x: -3.851730, y: -1.461758,\n  // },\n  // { // outlier\n  //   x: -3.061801, y: -2.263425,\n  // },\n  {\n    x: 10.774242,\n    y: -5.906333\n  },\n  {\n    x: 13.121441,\n    y: -5.619658\n  },\n  {\n    x: 14.468734,\n    y: -5.250108\n  },\n  {\n    x: 16.904555,\n    y: -4.010556\n  },\n  {\n    x: 16.347028,\n    y: -3.217133\n  },\n  {\n    x: 12.557934,\n    y: 0.316651\n  },\n  {\n    x: 8.041965,\n    y: 1.601434\n  },\n  {\n    x: 4.042408,\n    y: 2.480701\n  }\n];\nconst LatinoCourseHull = [\n  {\n    x: 4.610013,\n    y: 4.257636\n  },\n  {\n    x: 2.146355,\n    y: 8.667928\n  },\n  {\n    x: -0.169206,\n    y: 6.742267\n  },\n  {\n    x: -1.269717,\n    y: 5.164818\n  },\n  {\n    x: -2.393896,\n    y: 1.107841\n  },\n  {\n    x: 1.3655,\n    y: -0.278531\n  }\n];\nconst SouthAsianCourseHull = [\n  // { // outlier\n  //   x: -1.827819, y: 3.050334,\n  // },\n  // { // outlier\n  //   x: -1.076747, y: -1.239178,\n  // },\n  {\n    x: 4.932366,\n    y: 3.12491\n  },\n  {\n    x: 4.948124,\n    y: 8.226731\n  },\n  {\n    x: 3.468338,\n    y: 8.931658\n  },\n  {\n    x: 0.598147,\n    y: 7.783064\n  },\n  {\n    x: 0.049454,\n    y: 7.175774\n  },\n  {\n    x: -0.336803,\n    y: 6.720488\n  },\n  {\n    x: -1.353051,\n    y: 5.275963\n  }\n];\nconst EastAsianCourseHull = [\n  {\n    x: 6.935497,\n    y: 9.871727\n  },\n  {\n    x: 5.845939,\n    y: 11.58637\n  },\n  {\n    x: 5.144031,\n    y: 11.682549\n  },\n  {\n    x: 3.85785,\n    y: 11.108422\n  },\n  {\n    x: 2.881433,\n    y: 10.591011\n  },\n  {\n    x: 3.714674,\n    y: 8.391783\n  },\n  {\n    x: 5.556027,\n    y: 7.919534\n  },\n  {\n    x: 6.203472,\n    y: 8.120435\n  }\n];\n\nconst Albania = [\n  {\n    x: 0.271565,\n    y: 1.659298\n  },\n  {\n    x: -0.423193,\n    y: 2.387469\n  },\n  {\n    x: -0.008547,\n    y: 1.884178\n  }\n];\nconst Australia = [\n  {\n    x: 3.357751,\n    y: 0.644414\n  },\n  {\n    x: 1.594792,\n    y: 3.889806\n  },\n  {\n    x: -3.017748,\n    y: 3.426239\n  },\n  {\n    x: -4.490767,\n    y: 0.392961\n  },\n  {\n    x: -4.532493,\n    y: -2.599597\n  },\n  {\n    x: -2.468832,\n    y: -4.357516\n  },\n  {\n    x: -0.065922,\n    y: -2.814371\n  }\n];\nconst Austria = [\n  {\n    x: -0.496577,\n    y: 0.023456\n  },\n  {\n    x: -1.382613,\n    y: 1.742238\n  },\n  {\n    x: -2.477706,\n    y: 1.430641\n  },\n  {\n    x: -3.121472,\n    y: 1.140468\n  },\n  {\n    x: -3.863678,\n    y: -0.19663\n  },\n  {\n    x: -2.488858,\n    y: -1.378063\n  },\n  {\n    x: -0.892227,\n    y: -1.671945\n  }\n];\nconst Belgium = [\n  {\n    x: -3.019465,\n    y: 2.165761\n  },\n  {\n    x: -4.588138,\n    y: -0.486385\n  },\n  {\n    x: -4.097529,\n    y: -1.548942\n  },\n  {\n    x: -3.576633,\n    y: -2.337988\n  },\n  {\n    x: -2.328161,\n    y: -3.133786\n  },\n  {\n    x: -0.361389,\n    y: -2.588972\n  },\n  {\n    x: -0.718793,\n    y: -0.578437\n  },\n  {\n    x: -0.98915,\n    y: 0.163073\n  },\n  {\n    x: -1.20608,\n    y: 0.52843\n  }\n];\nconst Bosnia = [\n  {\n    x: -1.292131,\n    y: 3.377805\n  },\n  {\n    x: -3.324618,\n    y: 1.30022\n  },\n  {\n    x: -1.172939,\n    y: -1.003832\n  },\n  {\n    x: 0.380666,\n    y: 0.766479\n  }\n];\nconst Canada = [\n  {\n    x: -2.053946,\n    y: 2.369228\n  },\n  {\n    x: -5.574977,\n    y: -1.270321\n  },\n  {\n    x: -4.001114,\n    y: -3.298729\n  },\n  {\n    x: -2.923315,\n    y: -3.754708\n  },\n  {\n    x: -0.152175,\n    y: -2.565482\n  },\n  {\n    x: 2.985778,\n    y: 0.658768\n  },\n  {\n    x: 1.36615,\n    y: 2.573597\n  },\n  {\n    x: -0.075719,\n    y: 2.628606\n  }\n];\nconst Croatia = [\n  {\n    x: -2.469476,\n    y: 3.070913\n  },\n  {\n    x: -3.197622,\n    y: -0.20247\n  },\n  {\n    x: -1.01388,\n    y: 0.234094\n  },\n  {\n    x: -0.884382,\n    y: 0.819362\n  }\n];\nconst Cyprus = [\n  {\n    x: 2.823825,\n    y: 1.662874\n  },\n  {\n    x: 1.645988,\n    y: 3.548167\n  },\n  {\n    x: 2.151866,\n    y: 1.424123\n  }\n];\nconst CzechRepublic = [\n  {\n    x: -2.558127,\n    y: 1.562877\n  },\n  {\n    x: -5.259739,\n    y: -0.023098\n  },\n  {\n    x: -2.769638,\n    y: -1.216699\n  },\n  {\n    x: -0.531784,\n    y: -1.089744\n  },\n  {\n    x: -1.648487,\n    y: 1.473317\n  }\n];\nconst France = [\n  {\n    x: 0.797047,\n    y: 0.782825\n  },\n  {\n    x: -1.743407,\n    y: 1.861793\n  },\n  {\n    x: -4.045423,\n    y: 0.019248\n  },\n  {\n    x: -5.391178,\n    y: -2.833187\n  },\n  {\n    x: -1.215174,\n    y: -3.518454\n  },\n  {\n    x: 1.015838,\n    y: -2.777378\n  },\n  {\n    x: 0.939932,\n    y: -0.797853\n  }\n];\nconst Germany = [\n  {\n    x: -4.494293,\n    y: 1.501906\n  },\n  {\n    x: -4.66458,\n    y: -2.097992\n  },\n  {\n    x: -2.875924,\n    y: -3.354323\n  },\n  {\n    x: -2.319722,\n    y: -3.078773\n  },\n  {\n    x: 0.858935,\n    y: -1.103269\n  },\n  {\n    x: 0.670967,\n    y: 0.206568\n  },\n  {\n    x: -1.782171,\n    y: 2.414577\n  }\n];\nconst Greece = [\n  {\n    x: 2.339255,\n    y: 2.490826\n  },\n  {\n    x: -1.170816,\n    y: 2.709432\n  },\n  {\n    x: -0.777233,\n    y: 0.616809\n  },\n  {\n    x: 0.736584,\n    y: 0.881352\n  }\n];\nconst Hungary = [\n  {\n    x: -3.668432,\n    y: -1.181706\n  },\n  {\n    x: -2.393574,\n    y: -1.973066\n  },\n  {\n    x: -0.685801,\n    y: -0.656453\n  },\n  {\n    x: 0.079193,\n    y: 0.025151\n  },\n  {\n    x: -0.376357,\n    y: 1.773728\n  },\n  {\n    x: -0.885819,\n    y: 2.679338\n  },\n  {\n    x: -1.882272,\n    y: 2.615852\n  },\n  {\n    x: -2.628846,\n    y: 2.068333\n  }\n];\nconst Ireland = [\n  {\n    x: -5.305465,\n    y: -0.45693\n  },\n  {\n    x: -5.365703,\n    y: -2.351909\n  },\n  {\n    x: -4.805441,\n    y: -2.888809\n  },\n  {\n    x: -3.473505,\n    y: -4.117584\n  },\n  {\n    x: -0.928629,\n    y: -3.706735\n  },\n  {\n    x: -1.229938,\n    y: -0.758039\n  },\n  {\n    x: -2.446949,\n    y: 1.084678\n  }\n];\nconst Italy = [\n  {\n    x: 3.914939,\n    y: 2.138966\n  },\n  {\n    x: 1.684506,\n    y: 5.326388\n  },\n  {\n    x: -1.898414,\n    y: 3.820631\n  },\n  {\n    x: -2.997294,\n    y: 2.438378\n  },\n  {\n    x: -3.656486,\n    y: -1.24126\n  },\n  {\n    x: 1.137579,\n    y: -3.06658\n  },\n  {\n    x: 2.820619,\n    y: -0.926123\n  }\n];\nconst Macedonia = [\n  {\n    x: -1.899379,\n    y: 0.821876\n  },\n  {\n    x: -2.601933,\n    y: -0.780975\n  },\n  {\n    x: -0.348825,\n    y: 1.485115\n  },\n  {\n    x: -0.167305,\n    y: 1.951931\n  }\n];\nconst Netherlands = [\n  {\n    x: -0.826204,\n    y: -1.149232\n  },\n  {\n    x: -2.249344,\n    y: 2.625539\n  },\n  {\n    x: -4.012322,\n    y: 0.556734\n  },\n  {\n    x: -4.435496,\n    y: -2.830726\n  },\n  {\n    x: -2.962506,\n    y: -4.525817\n  }\n];\nconst Norway = [\n  {\n    x: -3.790403,\n    y: -2.435526\n  },\n  {\n    x: -1.032444,\n    y: 0.008635\n  },\n  {\n    x: -2.56492,\n    y: -0.602131\n  }\n];\nconst Poland = [\n  {\n    x: -3.80582,\n    y: 2.89069\n  },\n  {\n    x: -4.656686,\n    y: -1.637979\n  },\n  {\n    x: -2.622306,\n    y: -0.982319\n  },\n  {\n    x: -0.063111,\n    y: 0.779916\n  },\n  {\n    x: -1.459711,\n    y: 2.024932\n  }\n];\nconst Portugal = [\n  {\n    x: -3.318057,\n    y: -2.270575\n  },\n  {\n    x: -0.689538,\n    y: -4.395281\n  },\n  {\n    x: 0.767863,\n    y: -3.429436\n  },\n  {\n    x: 2.347073,\n    y: -1.50991\n  },\n  {\n    x: 1.251901,\n    y: -0.121739\n  },\n  {\n    x: -1.043236,\n    y: 1.69921\n  },\n  {\n    x: -2.863262,\n    y: -0.987965\n  }\n];\nconst Romania = [\n  {\n    x: -2.250624,\n    y: -1.363143\n  },\n  {\n    x: -0.620108,\n    y: -1.657407\n  },\n  {\n    x: 1.528372,\n    y: 1.419777\n  },\n  {\n    x: 0.799316,\n    y: 3.532207\n  },\n  {\n    x: -1.124995,\n    y: 3.90236\n  },\n  {\n    x: -1.91661,\n    y: 2.029713\n  }\n];\nconst Russia = [\n  {\n    x: -2.929563,\n    y: 2.015955\n  },\n  {\n    x: -5.645789,\n    y: 0.806481\n  },\n  {\n    x: -2.775518,\n    y: -0.333551\n  },\n  {\n    x: -1.806456,\n    y: -0.337016\n  },\n  {\n    x: -2.382728,\n    y: 0.9051\n  }\n];\nconst Scotland = [\n  {\n    x: -5.864868,\n    y: -2.668472\n  },\n  {\n    x: -3.927983,\n    y: -3.795642\n  },\n  {\n    x: -2.007583,\n    y: -0.92387\n  },\n  {\n    x: -2.161978,\n    y: -0.609557\n  },\n  {\n    x: -4.3138,\n    y: -0.921009\n  }\n];\nconst Serbia = [\n  {\n    x: -1.284438,\n    y: 1.232017\n  },\n  {\n    x: -0.497755,\n    y: 1.731929\n  },\n  {\n    x: -0.785316,\n    y: 3.695495\n  }\n];\nconst Spain = [\n  {\n    x: -3.128937,\n    y: -1.071621\n  },\n  {\n    x: -3.257032,\n    y: -1.723245\n  },\n  {\n    x: -1.454798,\n    y: -4.139377\n  },\n  {\n    x: -0.760888,\n    y: -4.233321\n  },\n  {\n    x: -0.154069,\n    y: -4.104127\n  },\n  {\n    x: 2.99492,\n    y: -1.918013\n  },\n  {\n    x: 0.8575,\n    y: 0.843743\n  },\n  {\n    x: -1.654164,\n    y: 1.273814\n  }\n];\nconst Sweden = [\n  {\n    x: 0.26165,\n    y: 0.229333\n  },\n  {\n    x: -1.292053,\n    y: 0.943602\n  },\n  {\n    x: -3.639869,\n    y: -0.106994\n  },\n  {\n    x: -5.004645,\n    y: -2.583457\n  },\n  {\n    x: -2.749752,\n    y: -1.870251\n  }\n];\nconst SwissFrench = [\n  {\n    x: -4.717953,\n    y: -0.593363\n  },\n  {\n    x: -3.866336,\n    y: -3.265778\n  },\n  {\n    x: -3.095848,\n    y: -3.746892\n  },\n  {\n    x: -2.118814,\n    y: -4.162975\n  },\n  {\n    x: -0.116562,\n    y: -3.394014\n  },\n  {\n    x: 1.11785,\n    y: -2.883467\n  },\n  {\n    x: 1.951262,\n    y: -0.998734\n  },\n  {\n    x: 1.251946,\n    y: 1.497424\n  },\n  {\n    x: -0.118951,\n    y: 2.340054\n  },\n  {\n    x: -2.630632,\n    y: 2.24097\n  },\n  {\n    x: -3.780499,\n    y: 1.902082\n  }\n];\nconst SwissGerman = [\n  {\n    x: 0.964278,\n    y: -0.796554\n  },\n  {\n    x: -1.223767,\n    y: 2.098841\n  },\n  {\n    x: -3.996143,\n    y: 1.539677\n  },\n  {\n    x: -4.76824,\n    y: 0.308857\n  },\n  {\n    x: -4.957158,\n    y: -1.069278\n  },\n  {\n    x: -2.987301,\n    y: -2.298295\n  },\n  {\n    x: -1.526524,\n    y: -2.691553\n  },\n  {\n    x: -0.503989,\n    y: -2.426145\n  }\n];\nconst SwissItalian = [\n  {\n    x: -3.410679,\n    y: -0.935617\n  },\n  {\n    x: -0.313685,\n    y: -1.859413\n  },\n  {\n    x: 0.785649,\n    y: -1.178756\n  },\n  {\n    x: 1.916573,\n    y: 0.300041\n  },\n  {\n    x: 1.076132,\n    y: 2.158879\n  },\n  {\n    x: 0.86576,\n    y: 2.477404\n  },\n  {\n    x: -3.127087,\n    y: 0.7506\n  }\n];\nconst Switzerland = [\n  {\n    x: -3.083392,\n    y: 1.662953\n  },\n  {\n    x: -4.735398,\n    y: -0.540095\n  },\n  {\n    x: -4.323113,\n    y: -1.050007\n  },\n  {\n    x: -3.428277,\n    y: -2.026033\n  },\n  {\n    x: -2.483035,\n    y: -2.996999\n  },\n  {\n    x: -0.07374,\n    y: -3.176715\n  },\n  {\n    x: 1.009546,\n    y: -1.922503\n  },\n  {\n    x: 0.897084,\n    y: -0.99607\n  },\n  {\n    x: 0.313401,\n    y: 1.57967\n  },\n  {\n    x: -1.135349,\n    y: 1.626733\n  }\n];\nconst Turkey = [\n  {\n    x: -0.646601,\n    y: 2.787556\n  },\n  {\n    x: 3.138026,\n    y: 2.406538\n  },\n  {\n    x: 3.103659,\n    y: 2.549876\n  },\n  {\n    x: 1.343005,\n    y: 3.930565\n  },\n  {\n    x: -0.082862,\n    y: 4.484449\n  }\n];\nconst USA = [\n  {\n    x: -4.774319,\n    y: -2.36826\n  },\n  {\n    x: -3.186467,\n    y: -3.97436\n  },\n  {\n    x: 1.05144,\n    y: -0.58709\n  },\n  {\n    x: -0.80102,\n    y: 0.613594\n  },\n  {\n    x: -3.109714,\n    y: 0.38319\n  },\n  {\n    x: -3.828213,\n    y: 0.070351\n  }\n];\nconst UnitedKingdom = [\n  {\n    x: 2.84795,\n    y: -0.267618\n  },\n  {\n    x: 2.763992,\n    y: 4.85646\n  },\n  {\n    x: -3.119162,\n    y: 2.232993\n  },\n  {\n    x: -4.264982,\n    y: 1.038667\n  },\n  {\n    x: -4.334979,\n    y: 0.953344\n  },\n  {\n    x: -4.813609,\n    y: 0.057518\n  },\n  {\n    x: -4.966267,\n    y: -0.265861\n  },\n  {\n    x: -5.338275,\n    y: -1.327627\n  },\n  {\n    x: -5.313423,\n    y: -1.923077\n  },\n  {\n    x: -5.040199,\n    y: -3.082841\n  },\n  {\n    x: -4.332247,\n    y: -3.743894\n  },\n  {\n    x: -3.793854,\n    y: -4.01706\n  },\n  {\n    x: -2.603659,\n    y: -4.308998\n  },\n  {\n    x: -1.075223,\n    y: -3.459772\n  }\n];\nconst Yugoslavia = [\n  {\n    x: -0.420563,\n    y: 4.377116\n  },\n  {\n    x: -3.011733,\n    y: 2.501788\n  },\n  {\n    x: -2.05184,\n    y: -0.014413\n  },\n  {\n    x: -0.837723,\n    y: -1.726686\n  },\n  {\n    x: 1.026449,\n    y: 2.102265\n  },\n  {\n    x: 1.402686,\n    y: 3.706864\n  }\n];\nconst Gujarati = [\n  // {\n  //   x: 0.262327, y: 1.721119,\n  // },\n  {\n    x: 4.926417,\n    y: 4.966025\n  },\n  {\n    x: 3.468338,\n    y: 8.931658\n  },\n  {\n    x: 1.712337,\n    y: 6.206042\n  }\n  // {\n  //   x: 0.912682, y: 4.131280,\n  // },\n];\nconst Hindi = [\n  {\n    x: 1.149282,\n    y: 6.488009\n  },\n  {\n    x: -0.695294,\n    y: 4.564693\n  },\n  {\n    x: 0.637719,\n    y: 3.235474\n  },\n  {\n    x: 4.467649,\n    y: 4.499556\n  },\n  {\n    x: 4.216576,\n    y: 5.21712\n  },\n  {\n    x: 2.410611,\n    y: 5.994405\n  }\n];\nconst IndianAsian = [\n  {\n    x: 2.296322,\n    y: 3.234586\n  },\n  {\n    x: 4.566012,\n    y: 5.172612\n  },\n  {\n    x: 4.211733,\n    y: 5.713882\n  },\n  {\n    x: 3.257849,\n    y: 6.309751\n  },\n  {\n    x: 1.646733,\n    y: 7.257817\n  },\n  {\n    x: 0.940495,\n    y: 7.078217\n  },\n  {\n    x: -0.336803,\n    y: 6.720488\n  },\n  {\n    x: -0.145589,\n    y: 5.017724\n  },\n  {\n    x: 0.865261,\n    y: 3.643052\n  }\n];\nconst Konkani = [\n  {\n    x: 3.467446,\n    y: 6.171481\n  },\n  {\n    x: 1.798737,\n    y: 6.96921\n  },\n  {\n    x: 2.440022,\n    y: 4.617784\n  }\n];\nconst Punjabi = [\n  {\n    x: -1.827819,\n    y: 3.050334\n  },\n  {\n    x: 0.257991,\n    y: 1.532879\n  },\n  {\n    x: 2.817861,\n    y: 2.7719\n  },\n  {\n    x: 3.575813,\n    y: 3.803476\n  },\n  // {\n  //   x: 4.948124, y: 8.226731,\n  // },\n  {\n    x: 0.049454,\n    y: 7.175774\n  },\n  {\n    x: -1.353051,\n    y: 5.275963\n  }\n];\nconst Urdu = [\n  {\n    x: -1.076747,\n    y: -1.239178\n  },\n  {\n    x: 4.932366,\n    y: 3.12491\n  },\n  {\n    x: 4.110252,\n    y: 6.52163\n  },\n  {\n    x: 0.598147,\n    y: 7.783064\n  },\n  {\n    x: -0.337446,\n    y: 3.971708\n  }\n];\n\nexport const continentalView = [\n  {\n    className: 'East Asian',\n    data: EastAsianCourseHull,\n    fill: 'EF5D28'\n  },\n  {\n    className: 'South Asian',\n    data: SouthAsianCourseHull,\n    fill: 'FF9833'\n  },\n  {\n    className: 'Latino',\n    data: LatinoCourseHull,\n    fill: '1A3177'\n  },\n  {\n    className: 'African American',\n    data: AfAmCourseHull,\n    fill: '79C7E3'\n  },\n  {\n    className: 'European',\n    data: EuropeanCourseHull,\n    fill: '12939A'\n  }\n];\n\nexport const europeanView = [\n  // {\n  //   className: 'Albania',\n  //   data: Albania,\n  //   fill: 'red',\n  // },\n  // {\n  //   className: 'Australia',\n  //   data: Australia,\n  //   fill: 'orange',\n  // },\n  // {\n  //   className: 'Austria',\n  //   data: Austria,\n  //   fill: 'yellow',\n  // },\n  // {\n  //   className: 'Belgium',\n  //   data: Belgium,\n  //   fill: 'green',\n  // },\n  // {\n  //   className: 'United Kingdom',\n  //   data: UnitedKingdom,\n  //   fill: 'EF5D28',\n  // },\n  {\n    className: 'Bosnia-Herzegovnia',\n    data: Bosnia,\n    fill: 'F78860'\n  },\n  // {\n  //   className: 'Canada',\n  //   data: Canada,\n  //   fill: 'purple',\n  // },\n  {\n    className: 'Croatia',\n    data: Croatia,\n    fill: '1A3177'\n  },\n  // {\n  //   className: 'Cyprus',\n  //   data: Cyprus,\n  //   fill: 'yellow',\n  // },\n  // {\n  //   className: 'Czech Republic',\n  //   data: CzechRepublic,\n  //   fill: 'blue',\n  // },\n  // {\n  //   className: 'France',\n  //   data: France,\n  //   fill: 'green',\n  // },\n  {\n    className: 'Germany',\n    data: Germany,\n    fill: '79C7E3'\n  },\n  {\n    className: 'Greece',\n    data: Greece,\n    fill: '12939A'\n  },\n  // {\n  //   className: 'Hungary',\n  //   data: Hungary,\n  //   fill: 'purple',\n  // },\n  // {\n  //   className: 'Ireland',\n  //   data: Ireland,\n  //   fill: 'purple',\n  // },\n  // {\n  //   className: 'Italy',\n  //   data: Italy,\n  //   fill: 'purple',\n  // },\n  // {\n  //   className: 'Macedonia',\n  //   data: Macedonia,\n  //   fill: 'purple',\n  // },\n  // {\n  //   className: 'Netherlands',\n  //   data: Netherlands,\n  //   fill: 'purple',\n  // },\n  // {\n  //   className: 'Norway',\n  //   data: Norway,\n  //   fill: 'purple',\n  // },\n  // {\n  //   className: 'Poland',\n  //   data: Poland,\n  //   fill: 'purple',\n  // },\n  {\n    className: 'Portugal',\n    data: Portugal,\n    fill: '0EA356'\n  },\n  // {\n  //   className: 'Romania',\n  //   data: Romania,\n  //   fill: 'purple',\n  // },\n  // {\n  //   className: 'Russia',\n  //   data: Russia,\n  //   fill: 'purple',\n  // },\n  {\n    className: 'Scotland',\n    data: Scotland,\n    fill: 'E8D727'\n  },\n  // {\n  //   className: 'Serbia',\n  //   data: Serbia,\n  //   fill: 'red',\n  // },\n  // {\n  //   className: 'Spain',\n  //   data: Spain,\n  //   fill: 'yellow',\n  // },\n  // {\n  //   className: 'Sweden',\n  //   data: Sweden,\n  //   fill: 'purple',\n  // },\n  // {\n  //   className: 'Swiss-French',\n  //   data: SwissFrench,\n  //   fill: 'yellow',\n  // },\n  // {\n  //   className: 'Swiss-German',\n  //   data: SwissGerman,\n  //   fill: 'yellow',\n  // },\n  // {\n  //   className: 'Swiss-Italian',\n  //   data: SwissItalian,\n  //   fill: 'gray',\n  // },\n  // {\n  //   className: 'Switzerland',\n  //   data: Switzerland,\n  //   fill: 'green',\n  // },\n  {\n    className: 'Turkey',\n    data: Turkey,\n    fill: '965D8A'\n  }\n  // {\n  //   className: 'USA',\n  //   data: USA,\n  //   fill: 'orange',\n  // },\n  // {\n  //   className: 'Yugoslavia',\n  //   data: Yugoslavia,\n  //   fill: 'yellow',\n  // },\n];\n\nexport const southAsianView = [\n  {\n    className: 'Urdu',\n    data: Urdu,\n    fill: 'F78860'\n  },\n  {\n    className: 'Punjabi',\n    data: Punjabi,\n    fill: 'E8D727'\n  },\n  {\n    className: 'Gujarati',\n    data: Gujarati,\n    fill: '0EA356'\n  },\n  // {\n  //   className: 'Hindi',\n  //   data: Hindi,\n  //   fill: 'green',\n  // },\n  {\n    className: 'Indian Asian',\n    data: IndianAsian,\n    fill: '79C7E3'\n  }\n  // {\n  //   className: 'Konkani',\n  //   data: Konkani,\n  //   fill: 'green',\n  // },\n];\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Table,\n  Col,\n  Row,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Spinner\n} from 'reactstrap';\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  PolygonSeries,\n  MarkSeries\n} from 'react-vis';\nimport { VCFSource } from 'myseq-vcf';\nimport every from 'lodash/every';\n\nimport {\n  withSourceAndSettings,\n  settingsPropType\n} from '../../contexts/context-helpers';\nimport SettingsAlert from '../analyses/SettingsAlert';\nimport ReferenceAlert from '../analyses/ReferenceAlert';\nimport { refAwareVariantQuery } from '../util/query';\nimport '../../../node_modules/react-vis/dist/style.css';\nimport queryVariants from './popres-drineasetal.clean.json';\nimport {\n  continentalView,\n  europeanView,\n  southAsianView\n} from './AncestryPCABackgrounds';\nimport { PubMed } from '../util/links';\n\nconst Legend = styled(Table)`\n  td,\n  th {\n    padding: 0.3rem;\n  }\n  tbody + tbody,\n  td,\n  th,\n  thead th {\n    border: 0;\n  }\n`;\n\nconst backgroundMap = {\n  continental: continentalView,\n  european: europeanView,\n  southasian: southAsianView\n};\n\nclass AncestryPCA extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      alleleCount: [],\n      showSettingsAlert: false,\n      showReferenceAlert: false,\n      isLoading: true,\n      backgroundPops: 'continental'\n    };\n\n    this.handleBackgroundChange = this.handleBackgroundChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { sample, assumeRefRef } = this.props.settings;\n\n    Promise.all(\n      queryVariants.map(query =>\n        refAwareVariantQuery(this.props.source, query, assumeRefRef)\n      )\n    )\n      .then(variants => {\n        const alleleCount = variants.map((variant, idx) => {\n          if (!variant) {\n            return undefined;\n          }\n          const countMatches = variant\n            .genotype(sample)\n            .match(new RegExp(queryVariants[idx].counted, 'g'));\n          return countMatches ? countMatches.length : 0;\n        });\n        this.setState({ alleleCount, isLoading: false });\n\n        if (!assumeRefRef && !every(variants)) {\n          this.setState({ showSettingsAlert: true });\n        }\n      })\n      .catch(() => {\n        // TODO: Differentiate error types\n        this.setState({ showReferenceAlert: true, isLoading: false });\n      });\n  }\n\n  handleAlertDismiss() {\n    this.setState({ showSettingsAlert: false });\n  }\n\n  handleBackgroundChange(evt) {\n    this.setState({ backgroundPops: evt.target.value });\n  }\n\n  computePCACoordinates() {\n    const { alleleCount } = this.state;\n    let PC1;\n    let PC2;\n    if (alleleCount.length === queryVariants.length) {\n      PC1 = 0.0;\n      PC2 = 0.0;\n      alleleCount.forEach((ac, idx) => {\n        const { avg, denom, PC1: coeff1, PC2: coeff2 } = queryVariants[idx];\n        const normAC = ac ? (ac - avg) / denom : 0.0;\n        PC1 += normAC * coeff1;\n        PC2 += normAC * coeff2;\n      });\n    }\n    return { PC1, PC2 };\n  }\n\n  render() {\n    const { settings } = this.props;\n    const {\n      showSettingsAlert,\n      showReferenceAlert,\n      isLoading,\n      backgroundPops\n    } = this.state;\n\n    const { PC1, PC2 } = this.computePCACoordinates();\n\n    let myData = [];\n    if (PC1 !== undefined && PC2 !== undefined) {\n      myData = [{ x: PC1, y: PC2 }];\n    }\n\n    // Select background view, defaulting to continental view\n    const backgroundView = backgroundMap[backgroundPops] || continentalView;\n\n    return (\n      <div>\n        <ReferenceAlert isOpen={showReferenceAlert} />\n        <SettingsAlert\n          isOpen={showSettingsAlert && !settings.assumeRefRef}\n          toggle={() => this.setState({ showSettingsAlert: false })}\n        />\n        {isLoading && (\n          <div>\n            <span className=\"text-primary\" style={{ verticalAlign: 'top' }}>\n              Loading genomic data and computing coordinates...\n            </span>{' '}\n            <Spinner size=\"sm\" color=\"primary\" />\n          </div>\n        )}\n        <Row>\n          <Col md=\"auto\">\n            <XYPlot width={360} height={360}>\n              <VerticalGridLines />\n              <HorizontalGridLines />\n              <XAxis title=\"PC1\" position=\"end\" />\n              <YAxis title=\"PC2\" position=\"end\" />\n              {backgroundView.map(country => (\n                <PolygonSeries\n                  key={country.className}\n                  className={country.className}\n                  data={country.data}\n                  style={{\n                    fill: country.fill,\n                    stroke: country.fill,\n                    strokeWidth: 1.5,\n                    fillOpacity: 0.5,\n                    strokeOpacity: 0.7\n                  }}\n                />\n              ))}\n              <MarkSeries data={myData} size={5} color=\"4c4c4c\" />\n            </XYPlot>\n          </Col>\n          <Col md={3}>\n            <Legend>\n              <thead>\n                <tr>\n                  <th colSpan=\"2\">Populations</th>\n                </tr>\n              </thead>\n              <tbody>\n                {backgroundView.map(country => (\n                  <tr key={country.className}>\n                    <td>\n                      <svg width=\"15\" height=\"15\">\n                        <rect\n                          width=\"15\"\n                          height=\"15\"\n                          style={{ fill: country.fill }}\n                        />\n                      </svg>\n                    </td>\n                    <td>{country.className}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Legend>\n            <Form>\n              <FormGroup>\n                <Label for=\"backgroundView\">\n                  <b>Background Population</b>\n                </Label>\n                <Input\n                  id=\"backgroundView\"\n                  type=\"select\"\n                  bsSize=\"sm\"\n                  value={backgroundPops}\n                  onChange={this.handleBackgroundChange}\n                >\n                  <option key=\"continental\" value=\"continental\">\n                    All Continents\n                  </option>\n                  <option key=\"europe\" value=\"european\">\n                    European\n                  </option>\n                  {/*\n                  <option key=\"southasian\" value=\"southasian\">\n                    South Asian\n                  </option>\n                  */}\n                </Input>\n              </FormGroup>\n            </Form>\n          </Col>\n          <Col>\n            <p>\n              PCA analysis is based on {queryVariants.length} ancestry\n              informative markers (AIMs) obtained from{' '}\n              <PubMed pubmedId=\"20805874\" /> and loadings generated from the{' '}\n              <PubMed pubmedId=\"18760391\">POPRES</PubMed> dataset. The PCA\n              coordinates for the sample being analyzed are computed using the\n              pre-determined loadings and projected onto coordinates\n              pre-computed for the individuals in the POPRES dataset. The\n              background shapes are the \"hulls\" of the different population\n              groups in the POPRES dataset.\n            </p>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nAncestryPCA.propTypes = {\n  settings: settingsPropType.isRequired,\n  source: PropTypes.instanceOf(VCFSource).isRequired\n};\n\nexport default withSourceAndSettings(AncestryPCA);\n","import React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport AnalysisSelector from '../AnalysisSelector';\n\nimport AncestryPCA from './AncestryPCA';\n\nconst ancestries = [\n  { title: 'PCA Analysis', route: '/ancestry/pca', component: AncestryPCA }\n];\n\nexport default function Ancestry(props) {\n  return (\n    <React.Fragment>\n      <AnalysisSelector\n        {...props}\n        analyses={ancestries}\n        category=\"Ancestry\"\n        categoryPath=\"/ancestry\"\n        dropdownText=\"Choose analysis\"\n      />\n      <Route\n        path=\"/ancestry\"\n        exact\n        render={() => (\n          <div>\n            <p>Explore the following genomic ancestry analyses:</p>\n            <ul>\n              {ancestries.map(ancestry => (\n                <li key={ancestry.route}>\n                  <Link to={ancestry.route}>{ancestry.title}</Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      />\n    </React.Fragment>\n  );\n}\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { Route, Redirect, Link, Switch } from 'react-router-dom';\nimport { Alert, Row, Col, Nav, NavLink } from 'reactstrap';\nimport styled from 'styled-components';\nimport { ExternalLink, PubMed } from '../util/links';\n\nfunction About() {\n  return (\n    <div>\n      <p>\n        MySeq is a single-page web application for privacy-protecting personal\n        genome analysis developed at Middlebury College by{' '}\n        <ExternalLink href=\"https://go.middlebury.edu/linderman\">\n          Michael Linderman\n        </ExternalLink>{' '}\n        and Middlebury students Leo McElroy and Laura Chang. MySeq was inspired\n        by the <PubMed pubmedId={22174289}>Interpretome</PubMed> and{' '}\n        <PubMed pubmedId={28334237}>DNA.LAND Compass</PubMed>.\n      </p>\n      <p>\n        MySeq does not upload your data to an external server. All analyses are\n        performed locally on your computer. MySeq can query external services to\n        obtain more information about variants, genes and other identifiers, but\n        MySeq <b>never</b> sends the genotype to an external service (that is\n        how many copies of a variant), only the variant description (that is the\n        &ldquo;edit&rdquo; to the reference genome). However, a combination of\n        rare variants, even without genotypes, may still be identifiable. You\n        can disable external queries via the{' '}\n        <Link to=\"/settings\">Settings</Link>.\n      </p>\n      <p>\n        MySeq works by only loading the small portions of otherwise large (100\n        MBs) variant call files needed for a particular analysis. As a result\n        MySeq can efficiently analyze whole genome-scale data files stored\n        locally or available online. Read more about how to{' '}\n        <Link to=\"/help/data\">prepare data for use with MySeq</Link>.\n      </p>\n      <p>\n        MySeq is open-source software available on{' '}\n        <ExternalLink href=\"https://github.com/mlinderm/myseq\">\n          GitHub\n        </ExternalLink>{' '}\n        under an Apache-2.0 license.\n      </p>\n    </div>\n  );\n}\n\nfunction Data() {\n  return (\n    <div>\n      <p>\n        MySeq is designed to analyze the VCF files produced by genome analysis\n        pipelines. VCF, or Variant Call Format, files describe genetic variants\n        and the corresponding genotypes (how many copies of a variant) for any\n        number of individuals. Whole genome sequencing typically identifies 4-5\n        million variants in an individual and thus VCF files can be very large\n        (100s of MB), too large to analyze within the browser unless the file is\n        specially compressed and indexed.\n      </p>\n      <p>\n        MySeq requires that the VCF file is BGZip-compressed and Tabix-indexed.\n        This is the typical way to prepare and distribute VCF files and so it is\n        likely that your VCF file is ready for use with MySeq without any\n        further preparation. Note, that MySeq requires both the VCF file and the\n        index file. When loading locally-stored files make sure to select both\n        files (which must be in the same folder). You can select multiple files\n        in the &ldquo;File Chooser&rdquo; by holding the <kbd>Shift ⇧</kbd> or{' '}\n        <kbd>Command ⌘</kbd> on your keyboard.\n      </p>\n      <p>\n        If your VCF file is not BGZip-compressed and Tabix-indexed, you will\n        need to prepare the file with the freely-available{' '}\n        <ExternalLink href=\"https://www.htslib.org/doc/bgzip.html\">\n          bgzip\n        </ExternalLink>{' '}\n        and{' '}\n        <ExternalLink href=\"https://www.htslib.org/doc/tabix.html\">\n          Tabix\n        </ExternalLink>{' '}\n        tools. MySeq is most effective when the VCF file has been normalized (so\n        that the variant descriptions are consistent with the available\n        databases). The MySeq repository includes a{' '}\n        <ExternalLink href=\"https://github.com/mlinderm/myseq/blob/master/scripts/normalize\">\n          script\n        </ExternalLink>{' '}\n        for normalizing (and compressing and indexing) a VCF file.\n      </p>\n    </div>\n  );\n}\n\nfunction Acknowledgements() {\n  return (\n    <div>\n      <p>\n        The MySeq{' '}\n        <ExternalLink href=\"https://github.com/mlinderm/myseq\">\n          README\n        </ExternalLink>{' '}\n        lists relevant attributions.\n      </p>\n      <p>\n        Variant annotations in the <Link to=\"/query\">query</Link> interface are\n        provided by the{' '}\n        <ExternalLink href=\"https://myvariant.info\">\n          MyVariant.info\n        </ExternalLink>{' '}\n        service. Many of the annotations are governed by their own specific\n        licensing terms:\n      </p>\n      <ul className=\"list-unstyled\">\n        <li>\n          <ExternalLink href=\"https://www.ncbi.nlm.nih.gov/clinvar/intro/\">\n            ClinVar\n          </ExternalLink>\n        </li>\n        <li>\n          <ExternalLink href=\"https://sites.google.com/site/jpopgen/dbNSFP\">\n            dbNSFP\n          </ExternalLink>\n        </li>\n        <li>\n          <ExternalLink href=\"http://gnomad.broadinstitute.org/terms\">\n            gnomAD\n          </ExternalLink>\n        </li>\n        <li>\n          <ExternalLink href=\"http://snpeff.sourceforge.net/download.html\">\n            SnpEff\n          </ExternalLink>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nfunction TermsAndConditions() {\n  return (\n    <div>\n      <p>\n        <b>MySeq is for educational and research use only</b>. MySeq is not\n        intended for diagnostic use or medical decision-making and no\n        information provided by the application should be considered diagnostic.\n        Please consult a health care professional with any medical questions or\n        concerns. By using MySeq (this website) you agree that you accept these\n        Terms and Conditions and are aware of the potential risks and benefits\n        of genome analysis.\n      </p>\n      <p>\n        MySeq is licensed under the{' '}\n        <ExternalLink href=\"https://opensource.org/licenses/Apache-2.0\">\n          Apache-2.0\n        </ExternalLink>{' '}\n        license and is provided on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied, including, without\n        limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT,\n        MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely\n        responsible for determining the appropriateness of using or\n        redistributing MySeq and assume any risks associated with Your exercise\n        of permissions under this License. In no event and under no legal\n        theory, whether in tort (including negligence), contract, or otherwise,\n        unless required by applicable law (such as deliberate and grossly\n        negligent acts) or agreed to in writing, shall any Contributor be liable\n        to You for damages, including any direct, indirect, special, incidental,\n        or consequential damages of any character arising as a result of this\n        License or out of the use or inability to use MySeq, even if such\n        Contributor has been advised of the possibility of such damages.\n      </p>\n    </div>\n  );\n}\n\nconst NavLinkSidebar = styled(NavLink)`\n  padding-top: 0;\n  padding-bottom: 0;\n`;\n\nfunction Help() {\n  return (\n    <div>\n      <h3>MySeq Help</h3>\n      <Alert color=\"warning\">\n        <b>MySeq is for educational and research use only</b>. MySeq is not\n        intended for diagnostic use or medical decision-making. Please consult a\n        health care professional with any medical questions or concerns. By\n        using MySeq (this website) you agree that you accept the{' '}\n        <Link to=\"/help/terms\">Terms and Conditions</Link> and are aware of the\n        potential risks and benefits of genome analysis.\n      </Alert>\n      <Row>\n        <Col md={3}>\n          <b>Help Topic</b>\n          <Nav vertical>\n            <NavLinkSidebar tag={Link} to=\"/help/about\">\n              About\n            </NavLinkSidebar>\n            <NavLinkSidebar tag={Link} to=\"/help/terms\">\n              Terms and Conditions\n            </NavLinkSidebar>\n            <NavLinkSidebar tag={Link} to=\"/help/data\">\n              Data Preparation\n            </NavLinkSidebar>\n            <NavLinkSidebar tag={Link} to=\"/help/acknowledgements\">\n              Acknowledgements\n            </NavLinkSidebar>\n          </Nav>\n        </Col>\n        <Col md={9}>\n          <Switch>\n            <Route path=\"/help/about\" exact component={About} />\n            <Route path=\"/help/terms\" exact component={TermsAndConditions} />\n            <Route path=\"/help/data\" exact component={Data} />\n            <Route\n              path=\"/help/acknowledgements\"\n              exact\n              component={Acknowledgements}\n            />\n            <Redirect exact from=\"/help\" to=\"/help/about\" />\n          </Switch>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Help;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Container } from 'reactstrap';\n\nimport SourceContext from './contexts/SourceContext';\nimport SettingsContext, {\n  defaultSettings,\n  settingsPropType\n} from './contexts/SettingsContext';\nimport SourceRoute from './components/SourceRoute';\nimport Navigation from './components/Navigation';\n\nimport Settings from './components/Settings';\nimport LoadVcfFile from './components/load/LoadVcfFile';\nimport VariantQuery from './components/query/VariantQuery';\nimport Traits from './components/traits/Traits';\nimport PGx from './components/pgx/PGx';\nimport Risks from './components/risks/Risks';\nimport Ancestry from './components/ancestry/Ancestry';\nimport Help from './components/help/Help';\n\nclass MySeq extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: null,\n      samples: [],\n      settings: Object.assign({}, defaultSettings, props.settings)\n    };\n\n    this.setSource = this.setSource.bind(this);\n    this.updateSettings = this.updateSettings.bind(this);\n  }\n\n  setSource(source) {\n    this.setState({ source });\n    source.samples().then(samples => {\n      this.setState({ samples });\n      this.updateSettings({ sample: samples[0] });\n    });\n  }\n\n  updateSettings(settings) {\n    this.setState({\n      settings: Object.assign({}, this.state.settings, settings)\n    });\n  }\n\n  render() {\n    const { source, samples, settings } = this.state;\n\n    return (\n      <SettingsContext.Provider value={settings}>\n        <SourceContext.Provider value={source}>\n          <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <main>\n              <Navigation\n                samples={samples}\n                settings={settings}\n                updateSettings={this.updateSettings}\n              />\n              <Container fluid>\n                <Switch>\n                  <SourceRoute path=\"/\" exact component={VariantQuery} />\n                  <Route\n                    path=\"/load\"\n                    exact\n                    render={rp => (\n                      <LoadVcfFile\n                        {...rp}\n                        setSource={this.setSource}\n                        updateSettings={this.updateSettings}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/settings\"\n                    exact\n                    render={rp => (\n                      <Settings\n                        {...rp}\n                        settings={settings}\n                        updateSettings={this.updateSettings}\n                      />\n                    )}\n                  />\n                  <Route path=\"/help\" component={Help} />\n                  <SourceRoute path=\"/query\" exact component={VariantQuery} />\n                  <Route path=\"/traits\" component={Traits} />\n                  <Route path=\"/pgx\" component={PGx} />\n                  <Route path=\"/risks\" component={Risks} />\n                  <Route path=\"/ancestry\" component={Ancestry} />\n                </Switch>\n              </Container>\n            </main>\n          </BrowserRouter>\n        </SourceContext.Provider>\n      </SettingsContext.Provider>\n    );\n  }\n}\n\nMySeq.propTypes = {\n  settings: settingsPropType\n};\n\nMySeq.defaultProps = {\n  settings: {}\n};\n\nexport default MySeq;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MySeq from './MySeq';\n\nimport './index.css';\n\nReactDOM.render(<MySeq />, document.getElementById('root'));\n"],"sourceRoot":""}